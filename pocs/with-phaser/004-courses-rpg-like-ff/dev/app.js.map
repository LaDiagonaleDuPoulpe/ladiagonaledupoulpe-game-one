{"version":3,"file":"app.js","sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./node_modules/js-priority-queue/priority-queue.min.js","webpack://[name]/./src/main.js","webpack://[name]/./src/plugins/user-input.js","webpack://[name]/./src/prefabs/battle/attack.js","webpack://[name]/./src/prefabs/battle/enemy-unit.js","webpack://[name]/./src/prefabs/battle/magical-attack.js","webpack://[name]/./src/prefabs/battle/physical-attack.js","webpack://[name]/./src/prefabs/battle/player-unit.js","webpack://[name]/./src/prefabs/battle/unit.js","webpack://[name]/./src/prefabs/hud/attack-menu-item.js","webpack://[name]/./src/prefabs/hud/enemy-menu-item.js","webpack://[name]/./src/prefabs/hud/magical-attack-menu-item.js","webpack://[name]/./src/prefabs/hud/menu-item.js","webpack://[name]/./src/prefabs/hud/menu.js","webpack://[name]/./src/prefabs/hud/message-box.js","webpack://[name]/./src/prefabs/hud/physical-attack-menu-item.js","webpack://[name]/./src/prefabs/hud/run-menu-item.js","webpack://[name]/./src/prefabs/hud/show-player-unit.js","webpack://[name]/./src/prefabs/hud/show-stat-with-bar.js","webpack://[name]/./src/prefabs/prefab.js","webpack://[name]/./src/prefabs/text-prefab.js","webpack://[name]/./src/prefabs/world/door.js","webpack://[name]/./src/prefabs/world/enemy-spawner.js","webpack://[name]/./src/prefabs/world/npc.js","webpack://[name]/./src/prefabs/world/player.js","webpack://[name]/./src/scenes/battle-scene.js","webpack://[name]/./src/scenes/boot-scene.js","webpack://[name]/./src/scenes/json-level-scene.js","webpack://[name]/./src/scenes/loading-scene.js","webpack://[name]/./src/scenes/title-scene.js","webpack://[name]/./src/scenes/world-scene.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"app\"] = factory();\n\telse\n\t\troot[\"app\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dev/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var e;e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,e.PriorityQueue=t()}}(function(){return function t(e,i,r){function o(n,s){if(!i[n]){if(!e[n]){var h=\"function\"==typeof require&&require;if(!s&&h)return h(n,!0);if(a)return a(n,!0);var u=new Error(\"Cannot find module '\"+n+\"'\");throw u.code=\"MODULE_NOT_FOUND\",u}var p=i[n]={exports:{}};e[n][0].call(p.exports,function(t){var i=e[n][1][t];return o(i?i:t)},p,p.exports,t,e,i,r)}return i[n].exports}for(var a=\"function\"==typeof require&&require,n=0;n<r.length;n++)o(r[n]);return o}({1:[function(t,e,i){var r,o,a,n,s,h=function(t,e){function i(){this.constructor=t}for(var r in e)u.call(e,r)&&(t[r]=e[r]);return i.prototype=e.prototype,t.prototype=new i,t.__super__=e.prototype,t},u={}.hasOwnProperty;r=t(\"./PriorityQueue/AbstractPriorityQueue\"),o=t(\"./PriorityQueue/ArrayStrategy\"),n=t(\"./PriorityQueue/BinaryHeapStrategy\"),a=t(\"./PriorityQueue/BHeapStrategy\"),s=function(t){function e(t){t||(t={}),t.strategy||(t.strategy=n),t.comparator||(t.comparator=function(t,e){return(t||0)-(e||0)}),e.__super__.constructor.call(this,t)}return h(e,t),e}(r),s.ArrayStrategy=o,s.BinaryHeapStrategy=n,s.BHeapStrategy=a,e.exports=s},{\"./PriorityQueue/AbstractPriorityQueue\":2,\"./PriorityQueue/ArrayStrategy\":3,\"./PriorityQueue/BHeapStrategy\":4,\"./PriorityQueue/BinaryHeapStrategy\":5}],2:[function(t,e,i){var r;e.exports=r=function(){function t(t){var e;if(null==(null!=t?t.strategy:void 0))throw\"Must pass options.strategy, a strategy\";if(null==(null!=t?t.comparator:void 0))throw\"Must pass options.comparator, a comparator\";this.priv=new t.strategy(t),this.length=(null!=t&&null!=(e=t.initialValues)?e.length:void 0)||0}return t.prototype.queue=function(t){this.length++,this.priv.queue(t)},t.prototype.dequeue=function(t){if(!this.length)throw\"Empty queue\";return this.length--,this.priv.dequeue()},t.prototype.peek=function(t){if(!this.length)throw\"Empty queue\";return this.priv.peek()},t.prototype.clear=function(){return this.length=0,this.priv.clear()},t}()},{}],3:[function(t,e,i){var r,o;o=function(t,e,i){var r,o,a;for(o=0,r=t.length;r>o;)a=o+r>>>1,i(t[a],e)>=0?o=a+1:r=a;return o},e.exports=r=function(){function t(t){var e;this.options=t,this.comparator=this.options.comparator,this.data=(null!=(e=this.options.initialValues)?e.slice(0):void 0)||[],this.data.sort(this.comparator).reverse()}return t.prototype.queue=function(t){var e;e=o(this.data,t,this.comparator),this.data.splice(e,0,t)},t.prototype.dequeue=function(){return this.data.pop()},t.prototype.peek=function(){return this.data[this.data.length-1]},t.prototype.clear=function(){this.data.length=0},t}()},{}],4:[function(t,e,i){var r;e.exports=r=function(){function t(t){var e,i,r,o,a,n,s,h,u;for(this.comparator=(null!=t?t.comparator:void 0)||function(t,e){return t-e},this.pageSize=(null!=t?t.pageSize:void 0)||512,this.length=0,h=0;1<<h<this.pageSize;)h+=1;if(1<<h!==this.pageSize)throw\"pageSize must be a power of two\";for(this._shift=h,this._emptyMemoryPageTemplate=e=[],i=r=0,n=this.pageSize;n>=0?n>r:r>n;i=n>=0?++r:--r)e.push(null);if(this._memory=[],this._mask=this.pageSize-1,t.initialValues)for(s=t.initialValues,o=0,a=s.length;a>o;o++)u=s[o],this.queue(u)}return t.prototype.queue=function(t){this.length+=1,this._write(this.length,t),this._bubbleUp(this.length,t)},t.prototype.dequeue=function(){var t,e;return t=this._read(1),e=this._read(this.length),this.length-=1,this.length>0&&(this._write(1,e),this._bubbleDown(1,e)),t},t.prototype.peek=function(){return this._read(1)},t.prototype.clear=function(){this.length=0,this._memory.length=0},t.prototype._write=function(t,e){var i;for(i=t>>this._shift;i>=this._memory.length;)this._memory.push(this._emptyMemoryPageTemplate.slice(0));return this._memory[i][t&this._mask]=e},t.prototype._read=function(t){return this._memory[t>>this._shift][t&this._mask]},t.prototype._bubbleUp=function(t,e){var i,r,o,a;for(i=this.comparator;t>1&&(r=t&this._mask,t<this.pageSize||r>3?o=t&~this._mask|r>>1:2>r?(o=t-this.pageSize>>this._shift,o+=o&~(this._mask>>1),o|=this.pageSize>>1):o=t-2,a=this._read(o),!(i(a,e)<0));)this._write(o,e),this._write(t,a),t=o},t.prototype._bubbleDown=function(t,e){var i,r,o,a,n;for(n=this.comparator;t<this.length;)if(t>this._mask&&!(t&this._mask-1)?i=r=t+2:t&this.pageSize>>1?(i=(t&~this._mask)>>1,i|=t&this._mask>>1,i=i+1<<this._shift,r=i+1):(i=t+(t&this._mask),r=i+1),i!==r&&r<=this.length)if(o=this._read(i),a=this._read(r),n(o,e)<0&&n(o,a)<=0)this._write(i,e),this._write(t,o),t=i;else{if(!(n(a,e)<0))break;this._write(r,e),this._write(t,a),t=r}else{if(!(i<=this.length))break;if(o=this._read(i),!(n(o,e)<0))break;this._write(i,e),this._write(t,o),t=i}},t}()},{}],5:[function(t,e,i){var r;e.exports=r=function(){function t(t){var e;this.comparator=(null!=t?t.comparator:void 0)||function(t,e){return t-e},this.length=0,this.data=(null!=(e=t.initialValues)?e.slice(0):void 0)||[],this._heapify()}return t.prototype._heapify=function(){var t,e,i;if(this.data.length>0)for(t=e=1,i=this.data.length;i>=1?i>e:e>i;t=i>=1?++e:--e)this._bubbleUp(t)},t.prototype.queue=function(t){this.data.push(t),this._bubbleUp(this.data.length-1)},t.prototype.dequeue=function(){var t,e;return e=this.data[0],t=this.data.pop(),this.data.length>0&&(this.data[0]=t,this._bubbleDown(0)),e},t.prototype.peek=function(){return this.data[0]},t.prototype.clear=function(){this.length=0,this.data.length=0},t.prototype._bubbleUp=function(t){for(var e,i;t>0&&(e=t-1>>>1,this.comparator(this.data[t],this.data[e])<0);)i=this.data[e],this.data[e]=this.data[t],this.data[t]=i,t=e},t.prototype._bubbleDown=function(t){var e,i,r,o,a;for(e=this.data.length-1;;){if(i=(t<<1)+1,o=i+1,r=t,e>=i&&this.comparator(this.data[i],this.data[r])<0&&(r=i),e>=o&&this.comparator(this.data[o],this.data[r])<0&&(r=o),r===t)break;a=this.data[r],this.data[r]=this.data[t],this.data[t]=a,t=r}},t}()},{}]},{},[1])(1)});","import TitleScene from './scenes/title-scene';\nimport WordScene from './scenes/world-scene';\nimport BootScene from './scenes/boot-scene';\nimport LoadingScene from './scenes/loading-scene';\nimport BattleScene from './scenes/battle-scene';\nvar TITLE_SCENE_KEY = 'TitleScene';\nvar BOOT_SCENE_KEY = 'BootScene';\nvar LOADING_SCENE_KEY = 'LoadingScene';\nvar WORLD_SCENE_KEY = 'WorldScene';\nvar BATTLE_SCENE_KEY = 'BattleScene';\nvar titleScene = new TitleScene();\nvar bootScene = new BootScene();\nvar loadingScene = new LoadingScene();\nvar worldScene = new WordScene();\nvar battleScene = new BattleScene();\nvar config = {\n  type: Phaser.AUTO,\n  width: 640,\n  height: 640,\n  physics: {\n    \"default\": 'arcade',\n    arcade: {\n      gravity: {\n        y: 0\n      }\n    }\n  }\n};\nvar game = new Phaser.Game(config);\ngame.scene.add(TITLE_SCENE_KEY, titleScene);\ngame.scene.add(WORLD_SCENE_KEY, worldScene);\ngame.scene.add(BOOT_SCENE_KEY, bootScene);\ngame.scene.add(LOADING_SCENE_KEY, loadingScene);\ngame.scene.add(BATTLE_SCENE_KEY, battleScene);\ngame.scene.start(BOOT_SCENE_KEY, {\n  scene: 'title'\n});","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar UserInput =\n/*#__PURE__*/\nfunction () {\n  function UserInput(scene) {\n    _classCallCheck(this, UserInput);\n\n    this.scene = scene;\n    this.enabled = false;\n    this.keyListeners = ['down', 'up'];\n  } //#region public methods\n\n  /**\r\n   * attach on input press key\r\n   * @param {*} data json data\r\n   */\n\n\n  _createClass(UserInput, [{\n    key: \"setInput\",\n    value: function setInput(data) {\n      var _this = this;\n\n      this.keyListeners.forEach(function (item) {\n        var key = 'key' + item;\n\n        _this.scene.input.keyboard.removeAllListeners(key);\n\n        _this.scene.input.keyboard.on(key, _this.processInput, _this);\n      });\n      this.userData = data;\n      this.enabled = true;\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Keyboard event process\r\n     * @param {*} event key event\r\n     */\n\n  }, {\n    key: \"processInput\",\n    value: function processInput(event) {\n      if (this.enabled) {\n        var input = this.userData[event.type][event.key];\n\n        if (input) {\n          var callbackArray = input.callback.split('.');\n          var context = this.getContext(callbackArray);\n          var callingMethod = this.getCallingMethod(context, callbackArray);\n          callingMethod.apply(context, input.args);\n        }\n      }\n    }\n    /**\r\n     * Gets calling method from json file and event key\r\n     * @param {*} context \r\n     * @param {string[]} callbackArray \r\n     */\n\n  }, {\n    key: \"getCallingMethod\",\n    value: function getCallingMethod(context, callbackArray) {\n      var methodName = callbackArray[1];\n      return context[methodName];\n    }\n    /**\r\n     * Gets callback array, with context name and callback method\r\n     * @param {string[]} callbackArray \r\n     */\n\n  }, {\n    key: \"getContext\",\n    value: function getContext(callbackArray) {\n      var context = undefined;\n      var callingObject = callbackArray[0];\n\n      if (callingObject === 'scene') {\n        context = this.scene;\n      } else {\n        context = this.scene.prefabs[callingObject];\n      }\n\n      return context;\n    } //#endregion\n\n  }]);\n\n  return UserInput;\n}();\n\nexport default UserInput;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n/**\r\n* Enemy unit (during a battle)\r\n*/\n\nvar Attack =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(Attack, _Prefab);\n\n  function Attack(scene, name, position, properties) {\n    _classCallCheck(this, Attack);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Attack).call(this, scene, name, position, properties));\n  } //#region public methods\n\n  /**\r\n   * Launches an attack\r\n   * @param {Unit} target \r\n   */\n\n\n  _createClass(Attack, [{\n    key: \"hit\",\n    value: function hit(target) {\n      var damage = this.computeDamage(target);\n      target.receiveDamage(damage);\n      this.doMoreActionsDuringHit();\n      this.owner.anims.play(this.owner.name + '_' + this.defineAnimationToPlay());\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(Attack.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.owner = properties.owner;\n    }\n    /**\r\n     * Defines the animation key to play\r\n     */\n\n  }, {\n    key: \"defineAnimationToPlay\",\n    value: function defineAnimationToPlay() {\n      return 'attack1';\n    }\n    /**\r\n     * Here, you can do everything more, by overriding method\r\n     */\n\n  }, {\n    key: \"doMoreActionsDuringHit\",\n    value: function doMoreActionsDuringHit() {}\n    /**\r\n     * Defines random value to attack multiplier\r\n     */\n\n  }, {\n    key: \"defineAttackMultiplier\",\n    value: function defineAttackMultiplier() {\n      return this.scene.random.realInRange(0.8, 1.2);\n    }\n    /**\r\n     * Defines random value to defense multiplier\r\n     */\n\n  }, {\n    key: \"defineDefenseMultiplier\",\n    value: function defineDefenseMultiplier() {\n      return this.scene.random.realInRange(0.8, 1.2);\n    }\n    /**\r\n     * Defines the attack point value\r\n     */\n\n  }, {\n    key: \"getAttackPoint\",\n    value: function getAttackPoint() {\n      return this.owner.stats.attack;\n    } //#endregion  \n    //#region internal methods\n\n    /**\r\n    * Compute damages to put on unit target\r\n    * @param {Unit} target \r\n    */\n\n  }, {\n    key: \"computeDamage\",\n    value: function computeDamage(target) {\n      var attackMultiplier = this.defineAttackMultiplier();\n      var defenseMultiplier = this.defineDefenseMultiplier();\n      var realAttackPoints = attackMultiplier * this.getAttackPoint();\n      var realDefenseUnitPoints = defenseMultiplier * target.stats.defense;\n      var damage = Math.max(0, Math.round(realAttackPoints - realDefenseUnitPoints));\n      return damage;\n    } //#endregion\n\n  }]);\n\n  return Attack;\n}(Prefab);\n\nexport default Attack;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport Unit from './unit';\nimport PhysicalAttack from './physical-attack';\n/**\r\n * Enemy unit (during a battle)\r\n */\n\nvar EnemyUnit =\n/*#__PURE__*/\nfunction (_Unit) {\n  _inherits(EnemyUnit, _Unit);\n\n  function EnemyUnit(scene, name, position, properties) {\n    _classCallCheck(this, EnemyUnit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnemyUnit).call(this, scene, name, position, properties));\n  } //#region public methods  \n\n  /**\r\n   * Lanuches an attack \r\n   */\n\n\n  _createClass(EnemyUnit, [{\n    key: \"playAction\",\n    value: function playAction() {\n      var target = this.chooseTarget();\n      this.attack.hit(target);\n    }\n    /**\r\n     * Destroys enemy unit\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.active) {\n        var menuItem = this.scene.prefabs[this.name + 'Item'];\n\n        if (menuItem) {\n          menuItem.destroy();\n        }\n\n        _get(_getPrototypeOf(EnemyUnit.prototype), \"destroy\", this).call(this);\n      }\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(EnemyUnit.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.targetUnits = properties.targetUnits;\n      this.prepareAttack();\n    } //#endregion\n    //#region internal methods\n\n  }, {\n    key: \"prepareAttack\",\n    value: function prepareAttack() {\n      var key = this.name + '_' + 'attack';\n      var position = {\n        x: 0,\n        y: 0\n      };\n      var setting = {\n        group: 'attacks',\n        owner: this\n      };\n      this.attack = new PhysicalAttack(this.scene, key, position, setting);\n    }\n    /**\r\n     * Chooses a target to attack\r\n     */\n\n  }, {\n    key: \"chooseTarget\",\n    value: function chooseTarget() {\n      return this.getActiveUnit();\n    }\n    /**\r\n     * Gets active unit in battle scene\r\n     */\n\n  }, {\n    key: \"getActiveUnit\",\n    value: function getActiveUnit() {\n      var targetGroup = this.scene.groups[this.targetUnits];\n      var targetIndex = this.scene.random.between(0, targetGroup.countActive() - 1);\n      var target = undefined;\n      var i = 0;\n      targetGroup.children.each(function (unit) {\n        if (unit.active) {\n          if (i == targetIndex) {\n            target = unit;\n          }\n\n          i++;\n        }\n      }, this);\n      return target;\n    } //#endregion\n\n  }]);\n\n  return EnemyUnit;\n}(Unit);\n\nexport default EnemyUnit;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport Attack from './attack';\n/**\r\n* Enemy unit (during a battle)\r\n*/\n\nvar MagicalAttack =\n/*#__PURE__*/\nfunction (_Attack) {\n  _inherits(MagicalAttack, _Attack);\n\n  function MagicalAttack(scene, name, position, properties) {\n    _classCallCheck(this, MagicalAttack);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MagicalAttack).call(this, scene, name, position, properties));\n  } //#region protected methods\n\n\n  _createClass(MagicalAttack, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(MagicalAttack.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.manaCost = properties.manaCost;\n    }\n  }, {\n    key: \"defineAttackMultiplier\",\n    value: function defineAttackMultiplier() {\n      return this.scene.random.realInRange(0.9, 1.3);\n    }\n  }, {\n    key: \"defineDefenseMultiplier\",\n    value: function defineDefenseMultiplier() {\n      return this.scene.random.realInRange(0.7, 1.1);\n    }\n  }, {\n    key: \"getAttackPoint\",\n    value: function getAttackPoint() {\n      return this.owner.stats.magicAttack;\n    }\n  }, {\n    key: \"doMoreActionsDuringHit\",\n    value: function doMoreActionsDuringHit() {\n      this.owner.stats.mana -= this.manaCost;\n    }\n  }, {\n    key: \"defineAnimationToPlay\",\n    value: function defineAnimationToPlay() {\n      return 'attack2';\n    } //#endregion\n\n  }]);\n\n  return MagicalAttack;\n}(Attack);\n\nexport default MagicalAttack;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport Attack from './attack';\n/**\r\n* Enemy unit (during a battle)\r\n*/\n\nvar PhysicalAttack =\n/*#__PURE__*/\nfunction (_Attack) {\n  _inherits(PhysicalAttack, _Attack);\n\n  function PhysicalAttack(scene, name, position, properties) {\n    _classCallCheck(this, PhysicalAttack);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PhysicalAttack).call(this, scene, name, position, properties));\n  }\n\n  return PhysicalAttack;\n}(Attack);\n\nexport default PhysicalAttack;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport Unit from './unit';\n/**\r\n * Enemy unit (during a battle)\r\n */\n\nvar PlayerUnit =\n/*#__PURE__*/\nfunction (_Unit) {\n  _inherits(PlayerUnit, _Unit);\n\n  function PlayerUnit(scene, name, position, properties) {\n    var _this;\n\n    _classCallCheck(this, PlayerUnit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlayerUnit).call(this, scene, name, position, properties));\n    _this.experience = 0;\n    _this.currentLevel = 0;\n    _this.faceTexture = properties.faceTexture;\n    return _this;\n  } //#region public methods  \n\n  /**\r\n   * Launches an attack, or choose an element (potion, ...)\r\n   */\n\n\n  _createClass(PlayerUnit, [{\n    key: \"playAction\",\n    value: function playAction() {\n      this.scene.activateActionsMenu();\n    }\n    /**\r\n     * Upgrades experience \r\n     * @param {number} value \r\n     */\n\n  }, {\n    key: \"receiveExperience\",\n    value: function receiveExperience(value) {\n      this.experience += value;\n      this.verifyLevel();\n    } //#endregion\n    //#region internal methods\n\n  }, {\n    key: \"updateStatusBar\",\n    value: function updateStatusBar() {\n      this.scene.prefabs.showPlayerUnit.change(this, this.faceTexture);\n    }\n    /**\r\n     * Verifies level value, and updates if necessary\r\n     */\n\n  }, {\n    key: \"verifyLevel\",\n    value: function verifyLevel() {\n      var levelData = this.scene.experienceTable[this.currentLevel];\n\n      if (this.experience >= levelData.requiredExperience) {\n        this.goToNextLevel();\n        this.upgradeStats(levelData);\n      }\n    }\n    /**\r\n     * Go to the next level\r\n     */\n\n  }, {\n    key: \"goToNextLevel\",\n    value: function goToNextLevel() {\n      this.currentLevel++;\n      this.experience = 0;\n    }\n    /**\r\n     * Update stats from new level\r\n     * @param {JSON} levelData \r\n     */\n\n  }, {\n    key: \"upgradeStats\",\n    value: function upgradeStats(levelData) {\n      console.log('upgradeStats::0', this.stats);\n\n      for (var stat in levelData.statsIncrease) {\n        this.stats[stat] += levelData.statsIncrease[stat];\n      }\n\n      console.log('upgradeStats::1', this.stats);\n    } //#endregion\n\n  }]);\n\n  return PlayerUnit;\n}(Unit);\n\nexport default PlayerUnit;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n/**\r\n * Unit (player or enemy)\r\n */\n\nvar Unit =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(Unit, _Prefab);\n\n  function Unit(scene, name, position, properties) {\n    _classCallCheck(this, Unit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Unit).call(this, scene, name, position, properties));\n  } //#region public methods  \n\n  /**\r\n   * Lanuches an action \r\n   */\n\n\n  _createClass(Unit, [{\n    key: \"playAction\",\n    value: function playAction() {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * Calculates current attack turn\r\n     * @param {number} currentTurn \r\n     */\n\n  }, {\n    key: \"calculateAttackTurn\",\n    value: function calculateAttackTurn(currentTurn) {\n      console.log('calculateAttackTurn', currentTurn);\n\n      if (typeof currentTurn === 'undefined') {\n        currentTurn = this.attackTurn;\n      }\n\n      this.attackTurn = currentTurn + Math.ceil(100 / this.stats.speed);\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(Unit.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.createAnimations(name, properties);\n      this.attachEvents();\n      this.anims.play(this.startingAnimationKey);\n      this.stats = properties.stats;\n    } //#endregion\n    //#region internal methods\n\n  }, {\n    key: \"receiveDamage\",\n    value: function receiveDamage(damage) {\n      if (this.scene) {\n        this.stats.health -= damage;\n        this.anims.play(this.name + '_' + 'hit');\n        this.displayDamageText(damage);\n\n        if (this.stats.health <= 0) {\n          this.stats.health = 0;\n          this.destroy();\n        }\n      }\n    }\n  }, {\n    key: \"displayDamageText\",\n    value: function displayDamageText(damage) {\n      var damageText = this.scene.add.text(this.x, this.y - 50, '' + damage, {\n        font: 'bold 24px Kells',\n        fill: '#ff0000'\n      }, this.scene.groups.hud);\n      this.timeEvent = this.scene.time.addEvent({\n        delay: 1000,\n        callback: damageText.destroy,\n        callbackScope: damageText\n      });\n    }\n    /**\r\n    * Compute damages to put on unit target\r\n    * @param {Unit} target \r\n    */\n\n  }, {\n    key: \"computeDamage\",\n    value: function computeDamage(target) {\n      var attackMultiplier = this.scene.random.realInRange(0.8, 1.2);\n      var defenseMultiplier = this.scene.random.realInRange(0.8, 1.2);\n      var realAttackPoints = attackMultiplier * this.stats.attack;\n      var realDefenseUnitPoints = defenseMultiplier * target.stats.defense;\n      var damage = Math.max(0, Math.round(realAttackPoints - realDefenseUnitPoints));\n      return damage;\n    }\n    /**\r\n     * Gets active unit in battle scene\r\n     */\n\n  }, {\n    key: \"getActiveUnit\",\n    value: function getActiveUnit() {\n      var targetGroup = this.scene.groups[this.targetUnits];\n      var targetIndex = this.scene.random.between(0, targetGroup.countActive() - 1);\n      var target = undefined;\n      var i = 0;\n      targetGroup.children.each(function (unit) {\n        if (unit.active) {\n          if (i == targetIndex) {\n            target = unit;\n          }\n\n          i++;\n        }\n      }, this);\n      return target;\n    }\n  }, {\n    key: \"createAnimations\",\n    value: function createAnimations(name, properties) {\n      this.startingAnimationKey = this.createAnimation('idle', name, properties);\n      this.createAnimation('attack1', name, properties);\n      this.createAnimation('attack2', name, properties);\n      this.createAnimation('hit', name, properties);\n    }\n    /**\r\n    * Attachs on events (complete, ...)\r\n    */\n\n  }, {\n    key: \"attachEvents\",\n    value: function attachEvents() {\n      this.on('animationcomplete', this.backToIdle.bind(this));\n    }\n    /**\r\n    * After battle, go back to idle animation\r\n    */\n\n  }, {\n    key: \"backToIdle\",\n    value: function backToIdle(animation) {\n      this.anims.play(this.startingAnimationKey);\n      var beginingKey = this.name + '_' + 'attack';\n\n      if (animation.key.startsWith(beginingKey)) {\n        this.scene.goToNextTurn();\n      }\n    }\n    /**\r\n    * Creates an animation and return the animationKey\r\n    * @param {string} name \r\n    * @param {string} animationName\r\n    * @returns Returns animation key \r\n    */\n\n  }, {\n    key: \"createAnimation\",\n    value: function createAnimation(animationName, name, properties) {\n      var animationKey = name + '_' + animationName;\n\n      if (!this.scene.anims.anims.has(animationKey)) {\n        var frameConfig = {\n          frames: properties.animations[animationName].frames\n        };\n        var frames = this.scene.anims.generateFrameNumbers(this.texture.key, frameConfig);\n        this.scene.anims.create({\n          key: animationKey,\n          frames: frames,\n          frameRate: properties.animations[animationName].fps //repeat: -1 // repeat animation\n\n        });\n      }\n\n      return animationKey;\n    } //#endregion\n\n  }]);\n\n  return Unit;\n}(Prefab);\n\nexport default Unit;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport MenuItem from './menu-item';\nimport PhysicalAttack from '../battle/physical-attack';\n/**\r\n * It represents a specific menu item, to attack in a fight\r\n */\n\nvar AttackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inherits(AttackMenuItem, _MenuItem);\n\n  function AttackMenuItem(scene, name, position, properties) {\n    _classCallCheck(this, AttackMenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AttackMenuItem).call(this, scene, name, position, properties));\n  } //#region public methods   \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(AttackMenuItem, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(AttackMenuItem.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n    }\n    /**\r\n     * Selects one menu\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.setNewAttack();\n    }\n    /**\r\n     * Sets new attack item (a new turn)\r\n     */\n\n  }, {\n    key: \"setNewAttack\",\n    value: function setNewAttack() {\n      var position = {\n        x: 0,\n        y: 0\n      };\n      var setting = {\n        group: 'attacks',\n        owner: this.scene.currentUnit\n      };\n      var key = this.scene.currentUnit.name + '_' + 'attack';\n      this.scene.currentAttack = this.getAttackInstance(key, position, setting);\n      this.scene.activateActionsMenu(false);\n      this.scene.activateEnemysMenu(true);\n    }\n    /**\r\n     * Gets attack instance\r\n     * @param {string} key \r\n     * @param {position} position \r\n     * @param {properties} setting \r\n     */\n\n  }, {\n    key: \"getAttackInstance\",\n    value: function getAttackInstance(key, position, setting) {\n      return new PhysicalAttack(this.scene, key, position, setting);\n    } //#endregion\n\n  }]);\n\n  return AttackMenuItem;\n}(MenuItem);\n\nexport default AttackMenuItem;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport MenuItem from './menu-item';\n/**\r\n * It represents a specific menu item, about menu enemy\r\n */\n\nvar EnemyMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inherits(EnemyMenuItem, _MenuItem);\n\n  function EnemyMenuItem(scene, name, position, properties) {\n    _classCallCheck(this, EnemyMenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnemyMenuItem).call(this, scene, name, position, properties));\n  } //#region public methods   \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(EnemyMenuItem, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(EnemyMenuItem.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.enemy = this.scene.prefabs[properties.enemyName];\n    }\n    /**\r\n     * Selects one menu\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.scene.activateEnemysMenu(false);\n      this.scene.currentAttack.hit(this.enemy);\n    } //#endregion\n\n  }]);\n\n  return EnemyMenuItem;\n}(MenuItem);\n\nexport default EnemyMenuItem;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport MenuItem from './menu-item';\nimport Attack from '../battle/physical-attack';\nimport AttackMenuItem from './attack-menu-item';\nimport MagicalAttack from '../battle/magical-attack';\n/**\r\n * It represents a specific menu item, to attack in a fight\r\n */\n\nvar MagicalAttackMenuItem =\n/*#__PURE__*/\nfunction (_AttackMenuItem) {\n  _inherits(MagicalAttackMenuItem, _AttackMenuItem);\n\n  function MagicalAttackMenuItem(scene, name, position, properties) {\n    _classCallCheck(this, MagicalAttackMenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MagicalAttackMenuItem).call(this, scene, name, position, properties));\n  } //#region protected methods\n\n\n  _createClass(MagicalAttackMenuItem, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(MagicalAttackMenuItem.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.MANA_COST = 10;\n    }\n    /**\r\n     * Selects one menu\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      var manaIsEnabled = this.scene.currentUnit.stats.mana >= this.MANA_COST;\n\n      if (manaIsEnabled) {\n        this.setNewAttack();\n      }\n    }\n  }, {\n    key: \"getAttackInstance\",\n    value: function getAttackInstance(key, position, setting) {\n      setting.manaCost = this.MANA_COST;\n      return new MagicalAttack(this.scene, key, position, setting);\n    } //#endregion\n\n  }]);\n\n  return MagicalAttackMenuItem;\n}(AttackMenuItem);\n\nexport default MagicalAttackMenuItem;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(MenuItem, _Prefab);\n\n  function MenuItem(scene, name, position, properties) {\n    _classCallCheck(this, MenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuItem).call(this, scene, name, position, properties));\n  } //#region public methods   \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(MenuItem, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(MenuItem.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.setInteractive();\n      this.on('pointerdown', this.select.bind(this));\n    }\n    /**\r\n     * Selects one menu\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      console.log(this.name + ' selected');\n    } //#endregion\n\n  }]);\n\n  return MenuItem;\n}(Prefab);\n\nexport default MenuItem;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(Menu, _Prefab);\n\n  function Menu(scene, name, position, properties) {\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, scene, name, position, properties));\n  } //#region public methods\n\n  /**\r\n   * Enables or disables menu items\r\n   * @param {bool} state \r\n   */\n\n\n  _createClass(Menu, [{\n    key: \"enable\",\n    value: function enable(state) {\n      this.items.forEach(function (item) {\n        if (item.active) {\n          item.setInteractive(state);\n          item.setVisible(state);\n        }\n      }, this);\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(Menu.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.prepare(properties);\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Prepares menu with items in properties array\r\n     */\n\n  }, {\n    key: \"prepare\",\n    value: function prepare(properties) {\n      this.items = [];\n\n      for (var name in properties.menuItems) {\n        if (properties.menuItems.hasOwnProperty(name)) {\n          var menuItem = this.scene.createPrefab(name, properties.menuItems[name]);\n          this.items.push(menuItem);\n        }\n      }\n\n      this.enable(false);\n    } //#endregion\n\n  }]);\n\n  return Menu;\n}(Prefab);\n\nexport default Menu;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport TextPrefab from '../text-prefab';\n\nvar MessageBox =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(MessageBox, _Prefab);\n\n  function MessageBox(scene, name, position, properties) {\n    _classCallCheck(this, MessageBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageBox).call(this, scene, name, position, properties));\n  } //#region public methods    \n\n  /**\r\n   * Hides and destroy the message box\r\n   */\n\n\n  _createClass(MessageBox, [{\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(MessageBox.prototype), \"destroy\", this).call(this);\n\n      this.messageText.destroy();\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(MessageBox.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      var newPosition = {\n        x: this.x + this.width / 2,\n        y: this.y + 50\n      };\n      var newProperties = {\n        group: 'hud',\n        text: properties.message,\n        style: Object.create(this.scene.TEXT_STYLE)\n      };\n      this.messageText = new TextPrefab(this.scene, this.name + 'Message', newPosition, newProperties);\n      this.setOrigin(0);\n      this.messageText.setOrigin(0.5);\n    } //#endregion\n\n  }]);\n\n  return MessageBox;\n}(Prefab);\n\nexport default MessageBox;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport MenuItem from './menu-item';\nimport Attack from '../battle/physical-attack';\nimport AttackMenuItem from './attack-menu-item';\n/**\r\n * It represents a specific menu item, to attack in a fight\r\n */\n\nvar PhysicalAttackMenuItem =\n/*#__PURE__*/\nfunction (_AttackMenuItem) {\n  _inherits(PhysicalAttackMenuItem, _AttackMenuItem);\n\n  function PhysicalAttackMenuItem(scene, name, position, properties) {\n    _classCallCheck(this, PhysicalAttackMenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PhysicalAttackMenuItem).call(this, scene, name, position, properties));\n  } //#region protected methods\n\n\n  _createClass(PhysicalAttackMenuItem, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(PhysicalAttackMenuItem.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n    } //#endregion\n\n  }]);\n\n  return PhysicalAttackMenuItem;\n}(AttackMenuItem);\n\nexport default PhysicalAttackMenuItem;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport MenuItem from './menu-item';\nimport PhysicalAttack from '../battle/physical-attack';\n/**\r\n * It represents a specific menu item, when you want to leave the fight\r\n */\n\nvar RunMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inherits(RunMenuItem, _MenuItem);\n\n  function RunMenuItem(scene, name, position, properties) {\n    _classCallCheck(this, RunMenuItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RunMenuItem).call(this, scene, name, position, properties));\n  } //#region public methods   \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(RunMenuItem, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(RunMenuItem.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.runChance = properties.runChance;\n    }\n    /**\r\n     * Selects one menu\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      var currentChance = this.scene.random.frac();\n\n      if (currentChance < this.runChance) {\n        this.scene.backToWorld();\n      } else {\n        this.scene.goToNextTurn();\n      }\n    } //#endregion\n\n  }]);\n\n  return RunMenuItem;\n}(MenuItem);\n\nexport default RunMenuItem;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport TextPrefab from '../text-prefab';\nimport ShowStatWithBar from './show-stat-with-bar';\n/**\r\n * Prefabs to show data information from a unit (HP, MP, ...)\r\n */\n\nvar ShowPlayerUnit =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(ShowPlayerUnit, _Prefab);\n\n  function ShowPlayerUnit(scene, name, position, properties) {\n    _classCallCheck(this, ShowPlayerUnit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowPlayerUnit).call(this, scene, name, position, properties));\n  } //#region public methods  \n\n  /**\r\n   * Updates status bar\r\n   */\n\n\n  _createClass(ShowPlayerUnit, [{\n    key: \"change\",\n    value: function change(prefab, faceTexture) {\n      this.updateUnitData(prefab);\n      this.updateFaceTexture(faceTexture);\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(ShowPlayerUnit.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.prepareFaceInformations(properties);\n      this.setUnitData(properties);\n      this.playerUnitHealthBar = this.constructStatusBar('health', 'HP', properties);\n      this.playerUnitManaBar = this.constructStatusBar('mana', 'MP', properties, 30);\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Updates face texture, with the texture attribute\r\n     * @param {JSON} texture \r\n     */\n\n  }, {\n    key: \"updateFaceTexture\",\n    value: function updateFaceTexture(texture) {\n      this.faceSprite.setTexture(texture);\n    }\n    /**\r\n     * Updates unit data, by setting new with prefab attribute\r\n     * @param {JSON} prefab \r\n     */\n\n  }, {\n    key: \"updateUnitData\",\n    value: function updateUnitData(prefab) {\n      this.unitData = prefab;\n      this.playerUnitHealthBar.unitData = this.unitData;\n      this.playerUnitManaBar.unitData = this.unitData;\n    }\n    /**\r\n     * Constructs status bar class and returns it\r\n     * @param {string} key \r\n     * @param {string} title \r\n     * @param {JSON} properties \r\n     * @param {number} positionY \r\n     */\n\n  }, {\n    key: \"constructStatusBar\",\n    value: function constructStatusBar(key, title, properties, positionY) {\n      var name = this.name + '_' + key;\n\n      if (!positionY) {\n        positionY = 0;\n      }\n\n      var position = {\n        x: 0,\n        y: 0 + positionY\n      };\n      var setting = {\n        group: 'hud',\n        anchor: {\n          x: 0,\n          y: 0\n        },\n        text: title,\n        style: properties.textStyle,\n        prefab: properties.prefab,\n        stat: key,\n        barTexture: key + 'bar_image'\n      };\n      return new ShowStatWithBar(this.scene, name, position, setting);\n    }\n    /**\r\n     * Defines unitData attribute\r\n     * @param {JSON} properties \r\n     */\n\n  }, {\n    key: \"setUnitData\",\n    value: function setUnitData(properties) {\n      this.unitData = this.scene.prefabs[properties.prefab];\n    }\n    /**\r\n     * Prepares face information of the unit\r\n     * @param {JSON} properties \r\n     */\n\n  }, {\n    key: \"prepareFaceInformations\",\n    value: function prepareFaceInformations(properties) {\n      this.faceTexture = properties.faceTexture;\n      this.faceSprite = this.scene.add.sprite(this.x + 130, this.y, properties.faceTexture);\n      this.faceSprite.setOrigin(0);\n    } //#endregion\n\n  }]);\n\n  return ShowPlayerUnit;\n}(Prefab);\n\nexport default ShowPlayerUnit;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport TextPrefab from '../text-prefab';\n/**\r\n * Prefabs to show data information in a status bar\r\n */\n\nvar ShowStatWithBar =\n/*#__PURE__*/\nfunction (_TextPrefab) {\n  _inherits(ShowStatWithBar, _TextPrefab);\n\n  function ShowStatWithBar(scene, name, position, properties) {\n    var _this;\n\n    _classCallCheck(this, ShowStatWithBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowStatWithBar).call(this, scene, name, position, properties));\n\n    _this.setUnitData(properties);\n\n    _this.stat = properties.stat;\n\n    _this.createBar(properties);\n\n    return _this;\n  } //#region public methods  \n\n\n  _createClass(ShowStatWithBar, [{\n    key: \"update\",\n    value: function update() {\n      this.updateScaleOfBar();\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Updates scale of the status bar\r\n     */\n\n  }, {\n    key: \"updateScaleOfBar\",\n    value: function updateScaleOfBar() {\n      this.currentStat = this.unitData[this.stat];\n      this.barSprite.setScale(this.currentStat / 100, 1.0);\n    }\n    /**\r\n     * Adds sprite dedicated to the status bar\r\n     */\n\n  }, {\n    key: \"createBar\",\n    value: function createBar(properties) {\n      this.barSprite = this.scene.add.sprite(this.x, this.y + 20, properties.barTexture);\n      this.barSprite.setOrigin(0);\n    }\n    /**\r\n     * sets unitData attribute\r\n     * @param {JSON} properties \r\n     */\n\n  }, {\n    key: \"setUnitData\",\n    value: function setUnitData(properties) {\n      this.unitData = this.scene.prefabs[properties.prefab];\n    } //#endregion\n\n  }]);\n\n  return ShowStatWithBar;\n}(TextPrefab);\n\nexport default ShowStatWithBar;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Prefab =\n/*#__PURE__*/\nfunction (_Phaser$GameObjects$S) {\n  _inherits(Prefab, _Phaser$GameObjects$S);\n\n  function Prefab(scene, name, position, properties) {\n    var _this;\n\n    _classCallCheck(this, Prefab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Prefab).call(this, scene, position.x, position.y, properties.texture, properties.frame));\n\n    _this.initialize(scene, name, position, properties);\n\n    return _this;\n  } //#region protected methods\n\n\n  _createClass(Prefab, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      this.scene = scene;\n      this.name = name;\n      this.scene.add.existing(this);\n      this.scene.groups[properties.group].add(this);\n\n      if (properties.scale) {\n        this.setScale(properties.scale.x, properties.scale.y);\n      }\n\n      if (properties.anchor) {\n        this.setOrigin(properties.anchor.x, properties.anchor.y);\n      }\n\n      this.scene.prefabs[this.name] = this;\n    } //#endregion\n\n  }]);\n\n  return Prefab;\n}(Phaser.GameObjects.Sprite);\n\nexport default Prefab;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\r\n * Prefab to display text\r\n */\nvar TextPrefab =\n/*#__PURE__*/\nfunction (_Phaser$GameObjects$T) {\n  _inherits(TextPrefab, _Phaser$GameObjects$T);\n\n  function TextPrefab(scene, name, position, properties) {\n    var _this;\n\n    _classCallCheck(this, TextPrefab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextPrefab).call(this, scene, position.x, position.y, properties.text, properties.style)); // TODO: doing better => prefab and text-prefab got the same code in constructor\n\n    _this.scene = scene;\n    _this.name = name;\n\n    _this.scene.add.existing(_assertThisInitialized(_this));\n\n    _this.scene.groups[properties.group].add(_assertThisInitialized(_this));\n\n    if (properties.scale) {\n      _this.setScale(properties.scale.x, properties.scale.y);\n    }\n\n    if (properties.anchor) {\n      _this.setOrigin(properties.anchor.x, properties.anchor.y);\n    }\n\n    _this.scene.prefabs[_this.name] = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  return TextPrefab;\n}(Phaser.GameObjects.Text);\n\nexport default TextPrefab;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n\nvar Door =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(Door, _Prefab);\n\n  function Door(scene, name, position, properties) {\n    _classCallCheck(this, Door);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Door).call(this, scene, name, position, properties));\n  } //#region public methods    \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(Door, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(Door.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.nextLevel = properties.nextLevel;\n      this.scene.physics.add.collider(this, this.scene.groups.players, this.enter, null, this);\n      this.body.immovable = true;\n    }\n    /**\r\n    * Actions when user enters in the cave\r\n    * (callback when collision with Door)\r\n    */\n\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.scene.scene.start('BootScene', {\n        scene: this.nextLevel\n      });\n    } //#endregion\n\n  }]);\n\n  return Door;\n}(Prefab);\n\nexport default Door;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n/**\r\n * Manages player meeting with enemy\r\n */\n\nvar EnemySpawner =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(EnemySpawner, _Prefab);\n\n  function EnemySpawner(scene, name, position, properties) {\n    _classCallCheck(this, EnemySpawner);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnemySpawner).call(this, scene, name, position, properties));\n  } //#region public methods    \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(EnemySpawner, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(EnemySpawner.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.encounter = this.scene.cache.json.get(properties.encounter);\n      this.scene.physics.add.collider(this, this.scene.groups.players, this.spawn, null, this);\n      this.body.immovable = true;\n    }\n    /**\r\n    * Action the enemy starts the battle\r\n    */\n\n  }, {\n    key: \"spawn\",\n    value: function spawn() {\n      this.scene.scene.start('BootScene', {\n        scene: 'battle',\n        extraParameters: {\n          previousLevel: this.scene.levelData.level,\n          encounter: this.encounter\n        }\n      });\n    } //#endregion\n\n  }]);\n\n  return EnemySpawner;\n}(Prefab);\n\nexport default EnemySpawner;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\nimport MessageBox from '../hud/message-box';\n\nvar NPC =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(NPC, _Prefab);\n\n  function NPC(scene, name, position, properties) {\n    _classCallCheck(this, NPC);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NPC).call(this, scene, name, position, properties));\n  } //#region public methods    \n  //#endregion\n  //#region protected methods\n\n\n  _createClass(NPC, [{\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(NPC.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.message = this.scene.cache.text.get(properties.message);\n      this.MESSAGE_BOX_POSITION = {\n        x: 0,\n        y: 360\n      };\n      this.scene.physics.add.collider(this, this.scene.groups.players, this.talk, null, this);\n      this.body.immovable = true;\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n    * Actions when people will talk\r\n    * (displaying npc message)\r\n    */\n\n  }, {\n    key: \"talk\",\n    value: function talk(npc, player) {\n      player.stop();\n      this.createBox();\n    }\n    /**\r\n     * Creates the message box\r\n     */\n\n  }, {\n    key: \"createBox\",\n    value: function createBox() {\n      var properties = {\n        texture: 'messageBoxImage',\n        group: 'hud',\n        message: this.message\n      };\n      var box = new MessageBox(this.scene, this.name + 'MessageBox', this.MESSAGE_BOX_POSITION, properties);\n      this.scene.currentMessageBox = box;\n      this.scene.userInput.setInput(this.scene.userInputs.talkingUserInput);\n    } //#endregion\n\n  }]);\n\n  return NPC;\n}(Prefab);\n\nexport default NPC;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefab';\nimport TitleScene from '../../scenes/title-scene';\n\nvar Player =\n/*#__PURE__*/\nfunction (_Prefab) {\n  _inherits(Player, _Prefab);\n\n  function Player(scene, name, position, properties) {\n    _classCallCheck(this, Player);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, scene, name, position, properties));\n  } //#region public methods\n\n\n  _createClass(Player, [{\n    key: \"update\",\n    value: function update() {\n      if (this.body) {\n        this.moveByKeyDown();\n      }\n    }\n    /**\r\n     * Activates direction of the player\r\n     * @param {string} direction \r\n     * @param {boolean} isMoving \r\n     */\n\n  }, {\n    key: \"changeMovement\",\n    value: function changeMovement(direction, isMoving) {\n      this.movingDirections[direction] = isMoving;\n    }\n    /**\r\n     * Stops movement of the player\r\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.stoppingMovements();\n    } //#endregion\n    //#region protected methods\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(scene, name, position, properties) {\n      _get(_getPrototypeOf(Player.prototype), \"initialize\", this).call(this, scene, name, position, properties);\n\n      this.defineCollisionSettings();\n      this.defineWalkingSpeed(properties);\n      this.attachPlayerMovments();\n      this.prepareAnimationsByMovment();\n    } //#endregion\n    //#region internal methods\n\n  }, {\n    key: \"stoppingMovements\",\n    value: function stoppingMovements() {\n      this.movingDirections.down = false;\n      this.movingDirections.left = false;\n      this.movingDirections.right = false;\n      this.movingDirections.up = false;\n    }\n  }, {\n    key: \"moveByKeyDown\",\n    value: function moveByKeyDown() {\n      // console.log('moveByKeyDown->velocity.x', this.body.velocity.x);\n      // console.log('moveByKeyDown->velocity.y', this.body.velocity.y);\n      this.moveHorizontal();\n      this.moveVertical();\n      this.stopCurrentAnimation();\n    }\n  }, {\n    key: \"moveVertical\",\n    value: function moveVertical() {\n      if (this.movingDirections.up && this.body.velocity.y <= 0) {\n        this.body.velocity.y = -this.walkingSpeed;\n\n        if (this.body.velocity.x === 0) {\n          this.anims.play('walking_up', true);\n        }\n      } else if (this.movingDirections.down && this.body.velocity.y >= 0) {\n        this.body.velocity.y = this.walkingSpeed;\n\n        if (this.body.velocity.x === 0) {\n          this.anims.play('walking_down', true);\n        }\n      } else {\n        this.body.velocity.y = 0;\n      }\n    }\n  }, {\n    key: \"moveHorizontal\",\n    value: function moveHorizontal() {\n      if (this.movingDirections.left && this.body.velocity.x <= 0) {\n        this.body.velocity.x = -this.walkingSpeed;\n\n        if (this.body.velocity.y === 0) {\n          this.anims.play('walking_left', true);\n        }\n      } else if (this.movingDirections.right && this.body.velocity.x >= 0) {\n        this.body.velocity.x = this.walkingSpeed;\n\n        if (this.body.velocity.y === 0) {\n          this.anims.play('walking_right', true);\n        }\n      } else {\n        this.body.velocity.x = 0;\n      }\n    }\n  }, {\n    key: \"stopCurrentAnimation\",\n    value: function stopCurrentAnimation() {\n      if (this.body.velocity.x === 0 && this.body.velocity.y === 0) {\n        this.anims.stop();\n        this.displayCurrentFrameFromDirection();\n      }\n    }\n  }, {\n    key: \"displayCurrentFrameFromDirection\",\n    value: function displayCurrentFrameFromDirection() {\n      // console.log('displayCurrentFrameFromDirection->this.body.facing - 10 :', this.body.facing - 10);\n      this.setFrame(this.stoppedAnimationFrames[this.body.facing - 10]);\n    }\n  }, {\n    key: \"attachPlayerMovments\",\n    value: function attachPlayerMovments() {\n      this.movingDirections = {\n        left: false,\n        right: false,\n        up: false,\n        down: false\n      };\n    }\n  }, {\n    key: \"prepareAnimationsByMovment\",\n    value: function prepareAnimationsByMovment() {\n      this.prepareOneAnimationByMovment('down', 0);\n      this.prepareOneAnimationByMovment('up', 1);\n      this.prepareOneAnimationByMovment('left', 2);\n      this.prepareOneAnimationByMovment('right', 3);\n      this.stoppedAnimationFrames = [0, 1, 0, 2, 3];\n    }\n  }, {\n    key: \"prepareOneAnimationByMovment\",\n    value: function prepareOneAnimationByMovment(direction) {\n      var spriteLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var directionKey = \"walking_\".concat(direction);\n\n      if (!this.scene.anims.anims.has(directionKey)) {\n        this.scene.anims.create({\n          key: directionKey,\n          frames: this.scene.anims.generateFrameNumbers(this.texture.key, {\n            frames: [0 + spriteLevel, 4 + spriteLevel, 8 + spriteLevel, 12 + spriteLevel]\n          }),\n          frameRate: 6,\n          repeat: -1\n        });\n      }\n    }\n  }, {\n    key: \"defineWalkingSpeed\",\n    value: function defineWalkingSpeed(properties) {\n      this.walkingSpeed = +properties.walkingSpeed;\n    }\n  }, {\n    key: \"defineCollisionSettings\",\n    value: function defineCollisionSettings() {\n      this.body.collideWorldBounds = true;\n      this.scene.physics.add.collider(this, this.scene.layers.buildings);\n    } //#endregion\n\n  }]);\n\n  return Player;\n}(Prefab);\n\nexport default Player;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport JSonLevelScene from './json-level-scene';\nimport Prefab from '../prefabs/prefab';\nimport TextPrefab from '../prefabs/text-prefab';\nimport Unit from '../prefabs/battle/unit';\nimport PriorityQueue from '../../node_modules/js-priority-queue/priority-queue.min';\nimport MenuItem from '../prefabs/hud/menu-item';\nimport Menu from '../prefabs/hud/menu';\nimport PlayerUnit from '../prefabs/battle/player-unit';\nimport EnemyUnit from '../prefabs/battle/enemy-unit';\nimport PhysicalAttackMenuItem from '../prefabs/hud/physical-attack-menu-item';\nimport EnemyMenuItem from '../prefabs/hud/enemy-menu-item';\nimport MagicalAttackMenuItem from '../prefabs/hud/magical-attack-menu-item';\nimport RunMenuItem from '../prefabs/hud/run-menu-item';\nimport ShowPlayerUnit from '../prefabs/hud/show-player-unit';\n/**\r\n * Scene displaying title and starts game after clicked on it\r\n */\n\nvar BattleScene =\n/*#__PURE__*/\nfunction (_JSonLevelScene) {\n  _inherits(BattleScene, _JSonLevelScene);\n\n  function BattleScene() {\n    var _this;\n\n    _classCallCheck(this, BattleScene);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BattleScene).call(this, 'BattleScene'));\n    _this.random = new Phaser.Math.RandomDataGenerator();\n    return _this;\n  } //#region public methods\n\n\n  _createClass(BattleScene, [{\n    key: \"create\",\n    value: function create() {\n      _get(_getPrototypeOf(BattleScene.prototype), \"create\", this).call(this);\n\n      this.getExperienceTable();\n      this.createAllEnemies();\n      this.loadPartyData();\n      this.prepareGamingQueue();\n    }\n  }, {\n    key: \"init\",\n    value: function init(data) {\n      _get(_getPrototypeOf(BattleScene.prototype), \"init\", this).call(this, data);\n\n      this.previousLevel = data.extraParameters.previousLevel;\n      this.encounter = data.extraParameters.encounter;\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      this.loadExperienceTable();\n    }\n    /**\r\n     * Stops battle, and go back to map\r\n     */\n\n  }, {\n    key: \"backToWorld\",\n    value: function backToWorld() {\n      this.scene.start('BootScene', {\n        scene: this.previousLevel\n      });\n    }\n    /**\r\n     * Launches new turn of attack in battle scene, thanks to queue\r\n     */\n\n  }, {\n    key: \"goToNextTurn\",\n    value: function goToNextTurn() {\n      var nextTurnIsValid = true;\n\n      if (this.groups.enemyUnits.countActive() === 0) {\n        this.endBattle();\n        nextTurnIsValid = false;\n      }\n\n      if (this.groups.playerUnits.countActive() === 0) {\n        this.gameOver();\n        nextTurnIsValid = false;\n      }\n\n      if (nextTurnIsValid) {\n        this.currentUnit = this.units.dequeue();\n\n        if (this.currentUnit.active) {\n          this.currentUnit.playAction();\n          this.currentUnit.calculateAttackTurn();\n          this.units.queue(this.currentUnit);\n        } else {\n          this.currentUnit = undefined;\n          this.goToNextTurn();\n        }\n      }\n    }\n    /**\r\n     * Activates the actions menu\r\n     * @param {boolean} enable \r\n     */\n\n  }, {\n    key: \"activateActionsMenu\",\n    value: function activateActionsMenu(enable) {\n      this.setEnableMenu(this.prefabs.actionsMenu, enable);\n    }\n    /**\r\n     * Activates the enemies menu\r\n     * @param {boolean} enable \r\n     */\n\n  }, {\n    key: \"activateEnemysMenu\",\n    value: function activateEnemysMenu(enable) {\n      this.setEnableMenu(this.prefabs.enemyUnitsMenu, enable);\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Loads party data from cache (prefabs stats)\r\n     */\n\n  }, {\n    key: \"loadPartyData\",\n    value: function loadPartyData() {\n      for (var unitDataKey in this.cache.game.partyData) {\n        var cacheDataUnit = this.cache.game.partyData[unitDataKey];\n        this.prefabs[unitDataKey].stats = {};\n\n        for (var statKey in cacheDataUnit.stats) {\n          this.prefabs[unitDataKey].stats[statKey] = cacheDataUnit.stats[statKey];\n          this.prefabs[unitDataKey].experience = cacheDataUnit.experience;\n          this.prefabs[unitDataKey].currentLevel = cacheDataUnit.currentLevel;\n        }\n      }\n\n      console.log('loadPartyData::warrior.stats', this.prefabs.warrior.stats);\n    }\n  }, {\n    key: \"getExperienceTable\",\n    value: function getExperienceTable() {\n      this.experienceTable = this.cache.json.get('experience_table');\n    }\n  }, {\n    key: \"loadExperienceTable\",\n    value: function loadExperienceTable() {\n      this.load.json('experience_table', 'assets/levels/experience_table.json');\n    }\n    /**\r\n     * All enemy units are killed\r\n     */\n\n  }, {\n    key: \"endBattle\",\n    value: function endBattle() {\n      this.giveMoreExperienceToUnits(this.saveDataFromUnitInCache.bind(this));\n      this.backToWorld();\n    }\n    /**\r\n     * Saves data from one unit in cache data\r\n     * @param {Unit} unit \r\n     */\n\n  }, {\n    key: \"saveDataFromUnitInCache\",\n    value: function saveDataFromUnitInCache(unit) {\n      console.log('saveDataFromUnitInCache::before', this.cache.game.partyData[unit.name].stats);\n      this.cache.game.partyData[unit.name].stats = unit.stats;\n      this.cache.game.partyData[unit.name].experience = unit.experience;\n      this.cache.game.partyData[unit.name].currentLevel = unit.currentLevel;\n      console.log('saveDataFromUnitInCache::after', this.cache.game.partyData[unit.name].stats);\n    }\n    /**\r\n     * Iterates units and gives experiences\r\n     */\n\n  }, {\n    key: \"giveMoreExperienceToUnits\",\n    value: function giveMoreExperienceToUnits(saveDataInCache) {\n      var _this2 = this;\n\n      var receivedExperience = this.encounter.reward.experience;\n      this.groups.playerUnits.children.each(function (unit) {\n        var addingExperience = receivedExperience / _this2.groups.playerUnits.children.size;\n        unit.receiveExperience(addingExperience);\n        saveDataInCache(unit);\n      }, this);\n    }\n    /**\r\n     * All player units are killed\r\n     */\n\n  }, {\n    key: \"gameOver\",\n    value: function gameOver() {\n      this.scene.start('BootScene', {\n        scene: 'title'\n      });\n    }\n    /**\r\n     * Creates all enemy prefabs\r\n     */\n\n  }, {\n    key: \"createAllEnemies\",\n    value: function createAllEnemies() {\n      for (var key in this.encounter.enemyData) {\n        this.createPrefab(key, this.encounter.enemyData[key]);\n      }\n    }\n  }, {\n    key: \"setEnableMenu\",\n    value: function setEnableMenu(menu, enable) {\n      if (typeof enable == \"undefined\") {\n        enable = true;\n      }\n\n      menu.enable(enable);\n    }\n  }, {\n    key: \"setPrefabs\",\n    value: function setPrefabs() {\n      this.prefabsClasses = {\n        background: Prefab.prototype.constructor,\n        playerUnit: PlayerUnit.prototype.constructor,\n        enemyUnit: EnemyUnit.prototype.constructor,\n        menuItem: MenuItem.prototype.constructor,\n        physicalAttackMenuItem: PhysicalAttackMenuItem.prototype.constructor,\n        enemyMenuItem: EnemyMenuItem.prototype.constructor,\n        magicalAttackMenuItem: MagicalAttackMenuItem.prototype.constructor,\n        runMenuItem: RunMenuItem.prototype.constructor,\n        menu: Menu.prototype.constructor,\n        showPlayerUnit: ShowPlayerUnit.prototype.constructor\n      };\n    }\n  }, {\n    key: \"prepareGamingQueue\",\n    value: function prepareGamingQueue() {\n      this.units = new PriorityQueue({\n        comparator: function comparator(unitA, unitB) {\n          return unitA.attackTurn - unitB.attackTurn;\n        }\n      });\n      this.calculateTurnForAllGroup(this.groups.playerUnits, 0);\n      this.calculateTurnForAllGroup(this.groups.enemyUnits, 0);\n      this.goToNextTurn();\n    }\n  }, {\n    key: \"calculateTurnForAllGroup\",\n    value: function calculateTurnForAllGroup(unitGroup, turn) {\n      var _this3 = this;\n\n      unitGroup.children.each(function (unit) {\n        unit.calculateAttackTurn(turn);\n\n        _this3.units.queue(unit);\n      });\n    } //#endregion\n\n  }]);\n\n  return BattleScene;\n}(JSonLevelScene);\n\nexport default BattleScene;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\r\n * Scene that loads the game\r\n * After, it will load the loading scene\r\n */\nvar BootScene =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(BootScene, _Phaser$Scene);\n\n  function BootScene() {\n    var _this;\n\n    _classCallCheck(this, BootScene);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BootScene).call(this, {\n      key: 'BootScene'\n    }));\n    _this.levels = {\n      title: {\n        key: 'TitleScene',\n        path: 'assets/levels/title_screen.json'\n      },\n      town: {\n        key: 'WorldScene',\n        path: 'assets/levels/town.json'\n      },\n      cave: {\n        key: 'WorldScene',\n        path: 'assets/levels/cave.json'\n      },\n      battle: {\n        key: 'BattleScene',\n        path: 'assets/levels/battle.json'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(BootScene, [{\n    key: \"preload\",\n    value: function preload() {\n      for (var name in this.levels) {\n        var level = this.levels[name];\n        this.load.json(name, level.path);\n      }\n    }\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      var levelData = this.cache.json.get(data.scene);\n      this.scene.start('LoadingScene', {\n        levelData: levelData,\n        scene: this.levels[data.scene].key,\n        extraParameters: data.extraParameters\n      });\n    }\n  }]);\n\n  return BootScene;\n}(Phaser.Scene);\n\nexport default BootScene;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Prefab from '../prefabs/prefab';\nimport TextPrefab from '../prefabs/text-prefab';\nimport UserInput from '../plugins/user-input';\n/**\r\n* Parent class to all scenev: anable you to load data from json file\r\n*/\n\nvar JSonLevelScene =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(JSonLevelScene, _Phaser$Scene);\n\n  function JSonLevelScene(key) {\n    var _this;\n\n    _classCallCheck(this, JSonLevelScene);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JSonLevelScene).call(this, {\n      key: key\n    }));\n\n    _this.setPrefabs();\n\n    return _this;\n  } //#region public methods\n\n\n  _createClass(JSonLevelScene, [{\n    key: \"init\",\n    value: function init(data) {\n      this.levelData = data.levelData;\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      this.prefabs = {};\n      this.groups = {};\n      this.createGroups();\n      this.initAllPrefabs();\n      this.initUserInputPlugin();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.updateAllPrefabs();\n    } //#endregion\n    //#region protected method\n\n    /**\r\n    * Creates prefab\r\n    * @param {string} spriteName \r\n    * @param {json} spriteData \r\n    */\n\n  }, {\n    key: \"createPrefab\",\n    value: function createPrefab(spriteName, spriteData) {\n      return new this.prefabsClasses[spriteData.type](this, spriteName, spriteData.position, spriteData.properties);\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n    * Inits new UserInput class\r\n    */\n\n  }, {\n    key: \"initUserInputPlugin\",\n    value: function initUserInputPlugin() {\n      if (this.levelData.userInput) {\n        this.userInputs = {};\n\n        for (var key in this.levelData.userInput) {\n          if (this.levelData.userInput.hasOwnProperty(key)) {\n            this.userInputs[key] = this.cache.json.get(key);\n          }\n        }\n\n        this.userInput = new UserInput(this);\n        this.userInputData = this.cache.json.get(this.levelData.initialUserInput);\n        this.userInput.setInput(this.userInputData);\n      }\n    }\n    /**\r\n    * Updates all child prefabs\r\n    */\n\n  }, {\n    key: \"updateAllPrefabs\",\n    value: function updateAllPrefabs() {\n      for (var name in this.prefabs) {\n        if (this.prefabs.hasOwnProperty(name)) {\n          this.prefabs[name].update();\n        }\n      }\n    }\n    /**\r\n    * Creates physic group (to manage collision for example)\r\n    */\n\n  }, {\n    key: \"createGroups\",\n    value: function createGroups() {\n      var _this2 = this;\n\n      this.levelData.groups.forEach(function (name) {\n        _this2.groups[name] = _this2.physics.add.group();\n      }, this);\n    }\n    /**\r\n    * Create all prefab items\r\n    */\n\n  }, {\n    key: \"initAllPrefabs\",\n    value: function initAllPrefabs() {\n      for (var key in this.levelData.prefabs) {\n        var spriteData = this.levelData.prefabs[key];\n        this.createPrefab(key, spriteData);\n      }\n    }\n    /**\r\n    * Define prefabs list \r\n    * You must with constructors\r\n    * Todo: doing better : just pass class type, and the parent class will set all constructors in the array list\r\n    */\n\n  }, {\n    key: \"setPrefabs\",\n    value: function setPrefabs() {\n      throw new Error('You must override it in child class');\n    } //#endregion\n\n  }]);\n\n  return JSonLevelScene;\n}(Phaser.Scene);\n\nexport default JSonLevelScene;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar LoadingScene =\n/*#__PURE__*/\nfunction (_Phaser$Scene) {\n  _inherits(LoadingScene, _Phaser$Scene);\n\n  function LoadingScene() {\n    _classCallCheck(this, LoadingScene);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LoadingScene).call(this, {\n      key: 'LoadingScene'\n    }));\n  } //#region public methods\n\n\n  _createClass(LoadingScene, [{\n    key: \"init\",\n    value: function init(data) {\n      this.levelData = data.levelData;\n      var message = this.add.text(320, 240, \"Loading\", {\n        font: \"48px Kells\",\n        fill: \"#ffffff\"\n      });\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      var assets = this.levelData.assets;\n      this.loadAssetsByType(assets);\n      this.loadUserInputData();\n    }\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      this.scene.start(data.scene, {\n        levelData: this.levelData,\n        extraParameters: data.extraParameters\n      });\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Loads image, spritesheets or tilemap from json data\r\n     * @param {*} assets \r\n     */\n\n  }, {\n    key: \"loadAssetsByType\",\n    value: function loadAssetsByType(assets) {\n      for (var key in assets) {\n        var asset = assets[key];\n\n        switch (asset.type) {\n          case 'image':\n            this.load.image(key, asset.source);\n            break;\n\n          case 'spritesheet':\n            {\n              this.load.spritesheet(key, asset.source, {\n                frameWidth: asset.frameWidth,\n                frameHeight: asset.frameHeight,\n                frames: asset.frames,\n                margin: asset.margin,\n                spacing: asset.spacing\n              });\n            }\n            break;\n\n          case \"tilemap\":\n            {\n              this.load.tilemapTiledJSON(key, asset.source);\n            }\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n    /**\r\n     * Loads user input json file\r\n     */\n\n  }, {\n    key: \"loadUserInputData\",\n    value: function loadUserInputData() {\n      for (var key in this.levelData.userInput) {\n        if (this.levelData.userInput.hasOwnProperty(key)) {\n          var path = this.levelData.userInput[key];\n          this.load.json(key, path);\n        }\n      }\n    } //#endregion\n\n  }]);\n\n  return LoadingScene;\n}(Phaser.Scene);\n\nexport default LoadingScene;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport JSonLevelScene from './json-level-scene';\nimport Prefab from '../prefabs/prefab';\nimport TextPrefab from '../prefabs/text-prefab';\n/**\r\n * Scene displaying title and starts game after clicked on it\r\n */\n\nvar TitleScene =\n/*#__PURE__*/\nfunction (_JSonLevelScene) {\n  _inherits(TitleScene, _JSonLevelScene);\n\n  function TitleScene() {\n    _classCallCheck(this, TitleScene);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TitleScene).call(this, 'TitleScene'));\n  } //#region public methods\n\n  /**\r\n   * Starts the game\r\n   */\n\n\n  _createClass(TitleScene, [{\n    key: \"startGame\",\n    value: function startGame() {\n      this.scene.start('BootScene', {\n        scene: 'town'\n      });\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      this.loadDefaultDataParty();\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      _get(_getPrototypeOf(TitleScene.prototype), \"create\", this).call(this);\n\n      this.getDefaultDataParty();\n    } //#endregion\n    //#region internal methods\n\n    /**\r\n     * Loads default data of the party\r\n     */\n\n  }, {\n    key: \"loadDefaultDataParty\",\n    value: function loadDefaultDataParty() {\n      this.load.json('default_data', 'assets/levels/default_data.json');\n    }\n  }, {\n    key: \"getDefaultDataParty\",\n    value: function getDefaultDataParty() {\n      this.cache.game.partyData = this.cache.json.get('default_data');\n    }\n  }, {\n    key: \"setPrefabs\",\n    value: function setPrefabs() {\n      this.prefabsClasses = {\n        background: Prefab.prototype.constructor,\n        text: TextPrefab.prototype.constructor\n      };\n    } //#endregion\n\n  }]);\n\n  return TitleScene;\n}(JSonLevelScene);\n\nexport default TitleScene;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport JSonLevelScene from './json-level-scene';\nimport Prefab from '../prefabs/prefab';\nimport TextPrefab from '../prefabs/text-prefab';\nimport Player from '../prefabs/world/player';\nimport Door from '../prefabs/world/door';\nimport NPC from '../prefabs/world/npc';\nimport EnemySpawner from '../prefabs/world/enemy-spawner';\n/**\r\n* Loading world tilemap scene\r\n*/\n\nvar WorldScene =\n/*#__PURE__*/\nfunction (_JSonLevelScene) {\n  _inherits(WorldScene, _JSonLevelScene);\n\n  function WorldScene() {\n    var _this;\n\n    _classCallCheck(this, WorldScene);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorldScene).call(this, 'WorldScene'));\n\n    _this.defineTextStyle();\n\n    return _this;\n  } //#region public methods\n\n  /**\r\n   * Creates the world (loads map, tilesets, layers, ...)\r\n   */\n\n\n  _createClass(WorldScene, [{\n    key: \"create\",\n    value: function create() {\n      this.map = this.add.tilemap(this.levelData.map.key);\n      this.prepareTileSets();\n      this.prepareLayers();\n\n      _get(_getPrototypeOf(WorldScene.prototype), \"create\", this).call(this);\n\n      this.prepareObjects();\n    }\n    /**\r\n     * Preloads data messages\r\n     */\n\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      this.loadMessages();\n      this.loadEnemyEncounters();\n    }\n  }, {\n    key: \"endTalk\",\n    value: function endTalk() {\n      this.currentMessageBox.destroy();\n      this.userInput.setInput(this.userInputs.townUserInput);\n    } //#endregion\n    //#region internal methods\n\n  }, {\n    key: \"defineTextStyle\",\n    value: function defineTextStyle() {\n      this.TEXT_STYLE = {\n        font: '14px Kells',\n        fill: \"#ffffff\"\n      };\n    }\n  }, {\n    key: \"loadEnemyEncounters\",\n    value: function loadEnemyEncounters() {\n      for (var key in this.levelData.enemyEncounters) {\n        this.load.json(key, this.levelData.enemyEncounters[key]);\n      }\n    }\n  }, {\n    key: \"loadMessages\",\n    value: function loadMessages() {\n      for (var key in this.levelData.npcMessages) {\n        this.load.text(key, this.levelData.npcMessages[key]);\n      }\n    }\n  }, {\n    key: \"prepareObjects\",\n    value: function prepareObjects() {\n      var _this2 = this;\n\n      this.map.objects.forEach(function (layer) {\n        layer.objects.forEach(_this2.createOneOject, _this2);\n      });\n    }\n  }, {\n    key: \"createOneOject\",\n    value: function createOneOject(object) {\n      var position = {\n        x: object.x + object.width / 2,\n        y: object.y + object.height / 2\n      };\n\n      if (this.prefabsClasses.hasOwnProperty(object.type)) {\n        var prefab = new this.prefabsClasses[object.type](this, object.name, position, object.properties);\n      }\n    }\n  }, {\n    key: \"prepareLayers\",\n    value: function prepareLayers() {\n      var _this3 = this;\n\n      this.layers = {};\n      this.map.layers.forEach(function (layer, index) {\n        _this3.layers[layer.name] = _this3.map.createStaticLayer(layer.name, _this3.tilesets[layer.properties.tileset]);\n\n        if (layer.properties.collision) {\n          _this3.map.setCollisionByExclusion([-1], true, layer.name);\n        }\n      });\n    }\n  }, {\n    key: \"prepareTileSets\",\n    value: function prepareTileSets() {\n      var _this4 = this;\n\n      this.tilesets = {};\n      this.map.tilesets.forEach(function (tileSet, index) {\n        var tileSetContent = _this4.levelData.map.tilesets[index];\n\n        var mapTileset = _this4.map.addTilesetImage(tileSet.name, tileSetContent);\n\n        _this4.tilesets[tileSetContent] = mapTileset;\n      }, this);\n    }\n  }, {\n    key: \"setPrefabs\",\n    value: function setPrefabs() {\n      this.prefabsClasses = {\n        player: Player.prototype.constructor,\n        door: Door.prototype.constructor,\n        npc: NPC.prototype.constructor,\n        enemySpawner: EnemySpawner.prototype.constructor\n      };\n    } //#endregion\n\n  }]);\n\n  return WorldScene;\n}(JSonLevelScene);\n\nexport default WorldScene;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACphhpIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnphGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxvJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1FA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxlSA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3JA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrsourceRoot":""}