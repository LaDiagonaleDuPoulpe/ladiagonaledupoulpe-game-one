{"version":3,"file":"bundle.js","sources":["webpack:///./src/prefabs/HUD/MenuItem.js","webpack:///./src/scenes/TitleScene.js","webpack:///./src/plugins/UserInput.js","webpack:///./src/scenes/WorldScene.js","webpack:///./src/prefabs/world/Player.js","webpack:///./src/prefabs/world/Door.js","webpack:///./src/prefabs/world/NPC.js","webpack:///./src/prefabs/HUD/MessageBox.js","webpack:///./src/prefabs/world/EnemySpawner.js","webpack:///./src/prefabs/Prefab.js","webpack:///./src/prefabs/world/Equipment.js","webpack:///./src/scenes/BattleScene.js","webpack:///./src/prefabs/battle/EnemyUnit.js","webpack:///./src/prefabs/battle/PlayerUnit.js","webpack:///./src/prefabs/HUD/PhysicalAttackMenuItem.js","webpack:///./src/prefabs/HUD/MagicalAttackMenuItem.js","webpack:///./src/prefabs/battle/MagicalAttack.js","webpack:///./src/prefabs/HUD/EnemyMenuItem.js","webpack:///./src/prefabs/HUD/RunMenuItem.js","webpack:///./src/prefabs/HUD/InventoryMenuItem.js","webpack:///./src/prefabs/HUD/Menu.js","webpack:///./src/prefabs/HUD/ShowPlayerUnit.js","webpack:///./src/prefabs/HUD/ShowStatWithBar.js","webpack:///./src/priority-queue.min.js","webpack:///./src/scenes/BootScene.js","webpack:///./src/scenes/LoadingScene.js","webpack:///./src/Inventory.js","webpack:///./src/prefabs/battle/Potion.js","webpack:///./src/prefabs/TextPrefab.js","webpack:///./src/scenes/JSONLevelScene.js","webpack:///./src/prefabs/battle/Unit.js","webpack:///./src/prefabs/battle/PhysicalAttack.js","webpack:///./src/prefabs/HUD/ItemMenuItem.js","webpack:///./src/prefabs/battle/Item.js","webpack:///./src/main.js"],"sourcesContent":["import Prefab from '../Prefab';\n\nclass MenuItem extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.setInteractive();\n        this.on('pointerdown', this.select.bind(this));\n    }\n\n    select() {\n        console.log(this.name + ' selected');\n    }\n}\n\nexport default MenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/MenuItem.js\n// module id = 105\n// module chunks = 0","import JSONLevelScene from './JSONLevelScene';\nimport Prefab from '../prefabs/Prefab.js';\nimport TextPrefab from '../prefabs/TextPrefab.js';\n\nclass TitleScene extends JSONLevelScene {\n    constructor() {\n        super('TitleScene');\n\n        this.prefab_classes = {\n            background: Prefab.prototype.constructor,\n            text: TextPrefab.prototype.constructor\n        };\n    }\n\n    preload() {\n        this.load.json('default_data', 'assets/levels/default_data.json');\n    }\n\n    create() {\n        super.create();\n        this.cache.game.party_data = this.cache.json.get('default_data');\n    }\n\n    start_game() {\n        this.scene.start('BootScene', { scene: 'town' });\n    }\n}\n\nexport default TitleScene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/TitleScene.js\n// module id = 1392\n// module chunks = 0","class UserInput {\n    constructor(scene) {\n        this.scene = scene;\n\n        this.enabled = false;\n    }\n\n    set_input(user_input_data) {\n        this.scene.input.keyboard.removeAllListeners('keydown');\n        this.scene.input.keyboard.removeAllListeners('keyup');\n\n        this.scene.input.keyboard.on('keydown', this.process_input, this);\n        this.scene.input.keyboard.on('keyup', this.process_input, this);\n\n        this.user_inputs = user_input_data;\n\n        this.enabled = true;\n    }\n\n    process_input(event) {\n        if (this.enabled) {\n            let user_input = this.user_inputs[event.type][event.key];\n            if (user_input) {\n                let context = undefined;\n                let callback_data = user_input.callback.split(\".\");\n                if (callback_data[0] === \"scene\") {\n                    context = this.scene;\n                } else {\n                    context = this.scene.prefabs[callback_data[0]];\n                }\n                let method = context[callback_data[1]];\n                method.apply(context, user_input.args);\n            }\n        }\n    }\n}\n\nexport default UserInput;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/plugins/UserInput.js\n// module id = 1393\n// module chunks = 0","import JSONLevelScene from './JSONLevelScene';\nimport Prefab from '../prefabs/Prefab.js';\nimport TextPrefab from '../prefabs/TextPrefab.js';\nimport Player from '../prefabs/world/Player.js';\nimport Door from '../prefabs/world/Door.js';\nimport NPC from '../prefabs/world/NPC.js';\nimport EnemySpawner from '../prefabs/world/EnemySpawner.js';\nimport Equipment from '../prefabs/world/Equipment.js';\n\nclass WorldScene extends JSONLevelScene {\n    constructor() {\n        super('WorldScene');\n\n        this.prefab_classes = {\n            player: Player.prototype.constructor,\n            door: Door.prototype.constructor,\n            npc: NPC.prototype.constructor,\n            enemy_spawner: EnemySpawner.prototype.constructor,\n            equipment: Equipment.prototype.constructor\n        };\n\n        this.TEXT_STYLE = { font: \"14px Kells\", fill: \"#FFFFFF\" };\n    }\n\n    preload() {\n        for (let npc_message_name in this.level_data.npc_messages) {\n            this.load.text(npc_message_name, this.level_data.npc_messages[npc_message_name]);\n        }\n\n        for (let enemy_encounter_name in this.level_data.enemy_encounters) {\n            this.load.json(enemy_encounter_name, this.level_data.enemy_encounters[enemy_encounter_name]);\n        }\n    }\n\n    create() {\n        // create map and set tileset\n        this.map = this.add.tilemap(this.level_data.map.key);\n        let tileset_index = 0;\n        this.tilesets = {};\n        this.map.tilesets.forEach(function (tileset) {\n            let map_tileset = this.map.addTilesetImage(tileset.name, this.level_data.map.tilesets[tileset_index]);\n            this.tilesets[this.level_data.map.tilesets[tileset_index]] = map_tileset;\n            tileset_index += 1;\n        }, this);\n\n        // create map layers before groups\n        this.layers = {};\n        this.map.layers.forEach(function (layer) {\n            this.layers[layer.name] = this.map.createStaticLayer(layer.name, this.tilesets[layer.properties.tileset]);\n            if (layer.properties.collision) {\n                // collision layer\n                this.map.setCollisionByExclusion([-1]);\n            }\n        }, this);\n\n        super.create();\n\n        this.map.objects.forEach(function (object_layer) {\n            object_layer.objects.forEach(this.create_object, this);\n        }, this);\n    }\n\n    create_object(object) {\n        // tiled coordinates starts in the bottom left corner\n        let object_y = object.gid ? object.y - this.map.tileHeight / 2 : object.y + object.height / 2;\n        let position = { \"x\": object.x + this.map.tileHeight / 2, \"y\": object_y };\n        // create object according to its type\n        if (this.prefab_classes.hasOwnProperty(object.type)) {\n            let prefab = new this.prefab_classes[object.type](this, object.name, position, object.properties);\n        }\n    }\n\n    update() {\n        for (let prefab_name in this.prefabs) {\n            this.prefabs[prefab_name].update();\n        }\n    }\n\n    end_talk() {\n        this.current_message_box.destroy();\n        this.user_input.set_input(this.user_inputs.town_user_input);\n    }\n}\n\nexport default WorldScene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/WorldScene.js\n// module id = 1394\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass Player extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.walking_speed = +properties.walking_speed;\n\n        this.scene.physics.add.existing(this);\n        this.body.collideWorldBounds = true;\n\n        this.moving = { left: false, right: false, up: false, down: false };\n\n        if (!this.scene.anims.anims.has('walking_down')) {\n            this.scene.anims.create({\n                key: 'walking_down',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: [0, 4, 8, 12] }),\n                frameRate: 6,\n                repeat: -1\n            });\n        }\n\n        if (!this.scene.anims.anims.has('walking_up')) {\n            this.scene.anims.create({\n                key: 'walking_up',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: [1, 5, 9, 13] }),\n                frameRate: 6,\n                repeat: -1\n            });\n        }\n\n        if (!this.scene.anims.anims.has('walking_left')) {\n            this.scene.anims.create({\n                key: 'walking_left',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: [2, 6, 10, 14] }),\n                frameRate: 6,\n                repeat: -1\n            });\n        }\n\n        if (!this.scene.anims.anims.has('walking_right')) {\n            this.scene.anims.create({\n                key: 'walking_right',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: [3, 7, 11, 15] }),\n                frameRate: 6,\n                repeat: -1\n            });\n        }\n\n        this.stopped_frames = [0, 1, 0, 2, 3];\n    }\n\n    update() {\n        this.scene.physics.world.collide(this, this.scene.layers.buildings);\n\n        if (this.moving.left && this.body.velocity.x <= 0) {\n            this.body.velocity.x = -this.walking_speed;\n            if (this.body.velocity.y === 0) {\n                this.anims.play('walking_left', true);\n            }\n        } else if (this.moving.right && this.body.velocity.x >= 0) {\n            this.body.velocity.x = this.walking_speed;\n            if (this.body.velocity.y === 0) {\n                this.anims.play('walking_right', true);\n            }\n        } else {\n            this.body.velocity.x = 0;\n        }\n\n        if (this.moving.up && this.body.velocity.y <= 0) {\n            this.body.velocity.y = -this.walking_speed;\n            if (this.body.velocity.x === 0) {\n                this.anims.play('walking_up', true);\n            }\n        } else if (this.moving.down && this.body.velocity.y >= 0) {\n            this.body.velocity.y = this.walking_speed;\n            if (this.body.velocity.x === 0) {\n                this.anims.play('walking_down', true);\n            }\n        } else {\n            this.body.velocity.y = 0;\n        }\n\n        if (this.body.velocity.x === 0 && this.body.velocity.y === 0) {\n            // stop current animation\n            this.anims.stop();\n            this.setFrame(this.stopped_frames[this.body.facing - 10]);\n        }\n    }\n\n    change_movement(direction, move) {\n        this.moving[direction] = move;\n    }\n\n    stop() {\n        this.moving = { left: false, right: false, up: false, down: false };\n    }\n}\n\nexport default Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/world/Player.js\n// module id = 1395\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass Door extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.next_level = properties.next_level;\n\n        this.scene.physics.add.existing(this);\n        this.body.immovable = true;\n    }\n\n    update() {\n        if (this.scene) {\n            this.scene.physics.world.collide(this, this.scene.groups.players, this.enter, null, this);\n        }\n    }\n\n    enter() {\n        this.scene.scene.start('BootScene', { scene: this.next_level });\n    }\n}\n\nexport default Door;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/world/Door.js\n// module id = 1396\n// module chunks = 0","import Prefab from '../Prefab';\nimport MessageBox from '../HUD/MessageBox';\n\nclass NPC extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.message = this.scene.cache.text.get(properties.message);\n\n        this.scene.physics.add.existing(this);\n        this.body.immovable = true;\n\n        this.MESSAGE_BOX_POSITION = { x: 0, y: 360 };\n    }\n\n    update() {\n        if (this.scene) {\n            this.scene.physics.world.collide(this, this.scene.groups.players, this.talk, null, this);\n        }\n    }\n\n    talk(npc, player) {\n        player.stop();\n\n        this.scene.current_message_box = new MessageBox(this.scene, this.name + \"_message_box\", this.MESSAGE_BOX_POSITION, { texture: \"message_box_image\", group: \"hud\", message: this.message });\n        this.scene.user_input.set_input(this.scene.user_inputs.talking_user_input);\n    }\n}\n\nexport default NPC;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/world/NPC.js\n// module id = 1397\n// module chunks = 0","import Prefab from '../Prefab';\nimport TextPrefab from '../TextPrefab';\n\nclass MessageBox extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.message_text = new TextPrefab(this.scene, this.name + \"_message\", { x: this.x + this.width / 2, y: this.y + 50 }, { group: \"hud\", text: properties.message, style: Object.create(this.scene.TEXT_STYLE) });\n\n        this.setOrigin(0);\n        this.message_text.setOrigin(0.5);\n    }\n\n    destroy() {\n        super.destroy();\n        this.message_text.destroy();\n    }\n}\n\nexport default MessageBox;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/MessageBox.js\n// module id = 1398\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass EnemySpawner extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.scene.physics.add.existing(this);\n        this.body.immovable = true;\n\n        this.encounter = this.scene.cache.json.get(properties.encounter);\n    }\n\n    update() {\n        if (this.scene) {\n            this.overlapping = this.scene.physics.world.collide(this, this.scene.groups.players, this.spawn, null, this);\n        }\n    }\n\n    spawn() {\n        this.scene.scene.start('BootScene', { scene: 'battle', extra_parameters: { previous_level: this.scene.level_data.level, encounter: this.encounter } });\n    }\n}\n\nexport default EnemySpawner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/world/EnemySpawner.js\n// module id = 1399\n// module chunks = 0","class Prefab extends Phaser.GameObjects.Sprite {\n    constructor(scene, name, position, properties) {\n        super(scene, position.x, position.y, properties.texture, properties.frame);\n\n        this.scene = scene;\n        this.name = name;\n        this.scene.add.existing(this);\n        this.scene.groups[properties.group].add(this);\n\n        if (properties.scale) {\n            this.setScale(properties.scale.x, properties.scale.y);\n        }\n\n        if (properties.anchor) {\n            this.setOrigin(properties.anchor.x, properties.anchor.y);\n        }\n\n        this.scene.prefabs[name] = this;\n    }\n}\n\nexport default Prefab;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/Prefab.js\n// module id = 14\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass Equipment extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.setScale(0.3, 0.3);\n\n        this.unit_name = properties.unit_name;\n        this.body_part = properties.body_part;\n        this.stat = properties.stat;\n        this.bonus = +properties.bonus;\n\n        this.scene.physics.add.existing(this);\n        this.body.immovable = true;\n        this.body.setSize(this.width * this.scaleX, this.height * this.scaleY);\n\n        this.scene.physics.add.collider(this, this.scene.groups.players, this.collect, null, this);\n    }\n\n    collect() {\n        let unit_data = this.scene.cache.game.party_data[this.unit_name];\n\n        if (unit_data.equipment[this.body_part].name !== this.name) {\n            unit_data.equipment[this.body_part] = { name: this.name };\n            unit_data.stats_bonus[this.stat] = this.bonus;\n            this.destroy();\n        }\n    }\n}\n\nexport default Equipment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/world/Equipment.js\n// module id = 1400\n// module chunks = 0","import JSONLevelScene from './JSONLevelScene';\nimport Prefab from '../prefabs/Prefab.js';\nimport TextPrefab from '../prefabs/TextPrefab.js';\nimport Unit from '../prefabs/battle/Unit.js';\nimport EnemyUnit from '../prefabs/battle/EnemyUnit.js';\nimport PlayerUnit from '../prefabs/battle/PlayerUnit.js';\nimport MenuItem from '../prefabs/HUD/MenuItem.js';\nimport PhysicalAttackMenuItem from '../prefabs/HUD/PhysicalAttackMenuItem.js';\nimport MagicalAttackMenuItem from '../prefabs/HUD/MagicalAttackMenuItem.js';\nimport EnemyMenuItem from '../prefabs/HUD/EnemyMenuItem.js';\nimport RunMenuItem from '../prefabs/HUD/RunMenuItem.js';\nimport InventoryMenuItem from '../prefabs/HUD/InventoryMenuItem.js';\nimport ItemMenuItem from '../prefabs/HUD/ItemMenuItem.js';\nimport Menu from '../prefabs/HUD/Menu.js';\nimport ShowPlayerUnit from '../prefabs/HUD/ShowPlayerUnit.js';\nimport PriorityQueue from '../priority-queue.min.js';\n\nclass BattleScene extends JSONLevelScene {\n    constructor() {\n        super('BattleScene');\n\n        this.prefab_classes = {\n            background: Prefab.prototype.constructor,\n            player_unit: PlayerUnit.prototype.constructor,\n            enemy_unit: EnemyUnit.prototype.constructor,\n            menu_item: MenuItem.prototype.constructor,\n            menu: Menu.prototype.constructor,\n            enemy_menu_item: EnemyMenuItem.prototype.constructor,\n            physical_attack_menu_item: PhysicalAttackMenuItem.prototype.constructor,\n            magical_attack_menu_item: MagicalAttackMenuItem.prototype.constructor,\n            run_menu_item: RunMenuItem.prototype.constructor,\n            inventory_menu_item: InventoryMenuItem.prototype.constructor,\n            show_player_unit: ShowPlayerUnit.prototype.constructor,\n            item_menu_item: ItemMenuItem.prototype.constructor\n        };\n\n        this.rnd = new Phaser.Math.RandomDataGenerator();\n    }\n\n    init(data) {\n        super.init(data);\n\n        this.previous_level = data.extra_parameters.previous_level;\n        this.encounter = data.extra_parameters.encounter;\n\n        console.log(this.cache.game.party_data);\n    }\n\n    preload() {\n        this.load.json('experience_table', 'assets/levels/experience_table.json');\n    }\n\n    create() {\n        super.create();\n\n        this.experience_table = this.cache.json.get('experience_table');\n\n        for (let enemy_unit_name in this.encounter.enemy_data) {\n            this.create_prefab(enemy_unit_name, this.encounter.enemy_data[enemy_unit_name]);\n        }\n\n        for (let player_unit_name in this.cache.game.party_data) {\n            let unit_data = this.cache.game.party_data[player_unit_name];\n            this.prefabs[player_unit_name].stats = {};\n            for (let stat_name in unit_data.stats) {\n                this.prefabs[player_unit_name].stats[stat_name] = unit_data.stats[stat_name] + unit_data.stats_bonus[stat_name];\n            }\n\n            this.prefabs[player_unit_name].experience = unit_data.experience;\n            this.prefabs[player_unit_name].current_level = unit_data.current_level;\n        }\n\n        this.cache.game.inventory.collect_item(this, { \"type\": \"potion\", \"properties\": { \"group\": \"items\", \"item_texture\": \"potion_image\" } });\n\n        this.cache.game.inventory.create_menu(this, this.prefabs.items_menu);\n\n        this.units = new PriorityQueue({ comparator: function (unit_a, unit_b) {\n                return unit_a.act_turn - unit_b.act_turn;\n            } });\n\n        this.groups.player_units.children.each(function (unit) {\n            unit.calculate_act_turn(0);\n            this.units.queue(unit);\n        }, this);\n        this.groups.enemy_units.children.each(function (unit) {\n            unit.calculate_act_turn(0);\n            this.units.queue(unit);\n        }, this);\n\n        this.next_turn();\n    }\n\n    start_game() {\n        this.scene.start('BootScene', { scene: 'town' });\n    }\n\n    next_turn() {\n        if (this.groups.enemy_units.countActive() === 0) {\n            this.end_battle();\n            return;\n        }\n\n        if (this.groups.player_units.countActive() === 0) {\n            this.game_over();\n            return;\n        }\n\n        this.current_unit = this.units.dequeue();\n        // if the unit is alive, it acts, otherwise goes to the next turn\n        if (this.current_unit.active) {\n            this.current_unit.act();\n            this.current_unit.calculate_act_turn(this.current_unit.act_turn);\n            this.units.queue(this.current_unit);\n        } else {\n            this.next_turn();\n        }\n    }\n\n    back_to_world() {\n        this.scene.start(\"BootScene\", { scene: this.previous_level });\n    }\n\n    game_over() {\n        this.scene.start(\"BootScene\", { scene: 'title' });\n    }\n\n    end_battle() {\n        let received_experience = this.encounter.reward.experience;\n        this.groups.player_units.children.each(player_unit => {\n            player_unit.receive_experience(received_experience / this.groups.player_units.children.size);\n\n            this.cache.game.party_data[player_unit.name].stats = player_unit.stats;\n            this.cache.game.party_data[player_unit.name].experience = player_unit.experience;\n            this.cache.game.party_data[player_unit.name].current_level = player_unit.current_level;\n        });\n\n        this.encounter.reward.items.forEach(function (item_object) {\n            this.cache.game.inventory.collect_item(this, item_object);\n        }, this);\n\n        this.back_to_world();\n    }\n}\n\nexport default BattleScene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/BattleScene.js\n// module id = 1401\n// module chunks = 0","import Prefab from '../Prefab';\nimport Unit from './Unit';\nimport PhysicalAttack from '../battle/PhysicalAttack';\n\nclass EnemyUnit extends Unit {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.target_units = properties.target_units;\n\n        this.attack = new PhysicalAttack(this.scene, this.name + \"_attack\", { x: 0, y: 0 }, { group: \"attacks\", owner: this });\n    }\n\n    choose_target() {\n        let target = undefined;\n        let target_index = this.scene.rnd.between(0, this.scene.groups[this.target_units].countActive() - 1);\n        let alive_player_unit_index = 0;\n        this.scene.groups[this.target_units].children.each(function (unit) {\n            if (unit.active) {\n                if (alive_player_unit_index === target_index) {\n                    target = unit;\n                }\n                alive_player_unit_index += 1;\n            }\n        }, this);\n        return target;\n    }\n\n    act() {\n        this.scene.prefabs.show_player_unit.show(false);\n\n        let target = this.choose_target();\n\n        this.attack.hit(target);\n    }\n\n    destroy() {\n        if (this.active) {\n            let menu_item = this.scene.prefabs[this.name + '_item'];\n            menu_item.destroy();\n            super.destroy();\n        }\n    }\n\n}\n\nexport default EnemyUnit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/EnemyUnit.js\n// module id = 1402\n// module chunks = 0","import Prefab from '../Prefab';\nimport Unit from './Unit';\n\nclass PlayerUnit extends Unit {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.face_texture = properties.face_texture;\n    }\n\n    act() {\n        this.scene.prefabs.show_player_unit.show(true);\n        this.scene.prefabs.actions_menu.enable(true);\n        this.scene.prefabs.show_player_unit.change_current_unit(this, this.face_texture);\n    }\n\n    receive_experience(experience) {\n        this.experience += experience;\n        let next_level_data = this.scene.experience_table[this.current_level];\n        if (this.experience >= next_level_data.required_exp) {\n            this.current_level += 1;\n            this.experience = 0;\n            for (let stat in next_level_data.stats_increase) {\n                if (next_level_data.stats_increase.hasOwnProperty(stat)) {\n                    this.stats[stat] += next_level_data.stats_increase[stat];\n                }\n            }\n        }\n    }\n\n}\n\nexport default PlayerUnit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/PlayerUnit.js\n// module id = 1403\n// module chunks = 0","import Prefab from '../Prefab';\nimport MenuItem from './MenuItem';\nimport PhysicalAttack from '../battle/PhysicalAttack';\n\nclass PhysicalAttackMenuItem extends MenuItem {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n    }\n\n    select() {\n        this.scene.current_attack = new PhysicalAttack(this.scene, this.scene.current_unit.name + \"_attack\", { x: 0, y: 0 }, { group: \"attacks\", owner: this.scene.current_unit });\n\n        this.scene.prefabs.actions_menu.enable(false);\n        this.scene.prefabs.enemy_units_menu.enable(true);\n    }\n}\n\nexport default PhysicalAttackMenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/PhysicalAttackMenuItem.js\n// module id = 1404\n// module chunks = 0","import Prefab from '../Prefab';\nimport MenuItem from './MenuItem';\nimport MagicalAttack from '../battle/MagicalAttack';\n\nclass MagicalAttackMenuItem extends MenuItem {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.MANA_COST = 10;\n    }\n\n    select() {\n        if (this.scene.current_unit.stats.mana >= this.MANA_COST) {\n            this.scene.current_attack = new MagicalAttack(this.scene, this.scene.current_unit.name + \"_attack\", { x: 0, y: 0 }, { group: \"attacks\", owner: this.scene.current_unit, mana_cost: this.MANA_COST });\n\n            this.scene.prefabs.actions_menu.enable(false);\n            this.scene.prefabs.enemy_units_menu.enable(true);\n        }\n    }\n}\n\nexport default MagicalAttackMenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/MagicalAttackMenuItem.js\n// module id = 1405\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass MagicalAttack extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.owner = properties.owner;\n        this.mana_cost = properties.mana_cost;\n    }\n\n    hit(target) {\n        let attack_multiplier = this.scene.rnd.realInRange(0.8, 1.2);\n        let defense_multiplier = this.scene.rnd.realInRange(0.8, 1.2);\n\n        let damage = Math.max(0, Math.round(attack_multiplier * this.owner.stats.magic_attack - defense_multiplier * target.stats.defense));\n\n        target.receive_damage(damage);\n\n        this.owner.stats.mana -= this.mana_cost;\n\n        this.owner.anims.play(this.owner.name + \"_attack2\");\n    }\n\n}\n\nexport default MagicalAttack;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/MagicalAttack.js\n// module id = 1406\n// module chunks = 0","import Prefab from '../Prefab';\nimport MenuItem from './MenuItem';\n\nclass EnemyMenuItem extends MenuItem {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n        this.enemy = this.scene.prefabs[properties.enemy_name];\n    }\n\n    select() {\n        this.scene.prefabs.enemy_units_menu.enable(false);\n        this.scene.current_attack.hit(this.enemy);\n    }\n}\n\nexport default EnemyMenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/EnemyMenuItem.js\n// module id = 1407\n// module chunks = 0","import Prefab from '../Prefab';\nimport MenuItem from './MenuItem';\n\nclass RunMenuItem extends MenuItem {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.run_chance = properties.run_chance;\n    }\n\n    select() {\n        let random_number = this.scene.rnd.frac();\n        console.log(random_number);\n        if (random_number < this.run_chance) {\n            this.scene.back_to_world();\n        } else {\n            this.scene.next_turn();\n        }\n    }\n}\n\nexport default RunMenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/RunMenuItem.js\n// module id = 1408\n// module chunks = 0","import Prefab from '../Prefab';\nimport MenuItem from './MenuItem';\n\nclass InventoryMenuItem extends MenuItem {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n    }\n\n    select() {\n        if (this.scene.cache.game.inventory.has_items()) {\n            this.scene.prefabs.actions_menu.enable(false);\n            this.scene.prefabs.items_menu.enable(true);\n        }\n    }\n}\n\nexport default InventoryMenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/InventoryMenuItem.js\n// module id = 1409\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass Menu extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.menu_items = [];\n        for (let menu_item_name in properties.menu_items) {\n            var new_item = this.scene.create_prefab(menu_item_name, properties.menu_items[menu_item_name]);\n            this.menu_items.push(new_item);\n        }\n\n        this.enable(false);\n    }\n\n    enable(enable) {\n        this.menu_items.forEach(menu_item => {\n            if (menu_item.active) {\n                menu_item.setInteractive(enable);\n                menu_item.setVisible(enable);\n            }\n        });\n    }\n}\n\nexport default Menu;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/Menu.js\n// module id = 1410\n// module chunks = 0","import Prefab from '../Prefab';\nimport ShowStatWithBar from './ShowStatWithBar';\n\nclass ShowPlayerUnit extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.face_texture = properties.face_texture;\n\n        this.unit_data = this.scene.prefabs[properties.prefab];\n\n        this.player_unit_health = new ShowStatWithBar(this.scene, this.name + \"_health\", { x: this.x, y: this.y }, { group: \"hud\", anchor: { x: 0, y: 0 }, text: \"HP\", style: properties.text_style, prefab: properties.prefab, stat: \"health\", bar_texture: \"healthbar_image\" });\n\n        this.player_unit_mana = new ShowStatWithBar(this.scene, this.name + \"_mana\", { x: this.x, y: this.y + 30 }, { group: \"hud\", anchor: { x: 0, y: 0 }, text: \"MP\", style: properties.text_style, prefab: properties.prefab, stat: \"mana\", bar_texture: \"manabar_image\" });\n\n        this.face_sprite = this.scene.add.sprite(this.x + 130, this.y, properties.face_texture);\n        this.face_sprite.setOrigin(0);\n    }\n\n    change_current_unit(new_prefab, new_face_texture) {\n        this.unit_data = new_prefab;\n        this.player_unit_health.unit_data = this.unit_data;\n        this.player_unit_mana.unit_data = this.unit_data;\n        this.face_sprite.setTexture(new_face_texture);\n    }\n\n    show(show) {\n        this.player_unit_health.show(show);\n        this.player_unit_mana.show(show);\n        this.face_sprite.setVisible(show);\n    }\n}\n\nexport default ShowPlayerUnit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/ShowPlayerUnit.js\n// module id = 1411\n// module chunks = 0","import TextPrefab from '../TextPrefab';\n\nclass ShowStatWithBar extends TextPrefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.unit_data = this.scene.prefabs[properties.prefab];\n        this.stat = properties.stat;\n        this.bar_sprite = this.scene.add.sprite(this.x, this.y + 20, properties.bar_texture);\n        this.bar_sprite.setOrigin(0);\n    }\n\n    update() {\n        this.current_stat = this.unit_data.stats[this.stat];\n        this.bar_sprite.setScale(this.current_stat / 100, 1.0);\n    }\n\n    show(show) {\n        this.setVisible(show);\n        this.bar_sprite.setVisible(show);\n    }\n}\n\nexport default ShowStatWithBar;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/ShowStatWithBar.js\n// module id = 1412\n// module chunks = 0","!function (t) {\n  if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = t();else if (\"function\" == typeof define && define.amd) define([], t);else {\n    var e;e = \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : this, e.PriorityQueue = t();\n  }\n}(function () {\n  return function t(e, i, r) {\n    function o(n, s) {\n      if (!i[n]) {\n        if (!e[n]) {\n          var h = \"function\" == typeof require && require;if (!s && h) return h(n, !0);if (a) return a(n, !0);var u = new Error(\"Cannot find module '\" + n + \"'\");throw u.code = \"MODULE_NOT_FOUND\", u;\n        }var p = i[n] = { exports: {} };e[n][0].call(p.exports, function (t) {\n          var i = e[n][1][t];return o(i ? i : t);\n        }, p, p.exports, t, e, i, r);\n      }return i[n].exports;\n    }for (var a = \"function\" == typeof require && require, n = 0; n < r.length; n++) o(r[n]);return o;\n  }({ 1: [function (t, e, i) {\n      var r,\n          o,\n          a,\n          n,\n          s,\n          h = function (t, e) {\n        function i() {\n          this.constructor = t;\n        }for (var r in e) u.call(e, r) && (t[r] = e[r]);return i.prototype = e.prototype, t.prototype = new i(), t.__super__ = e.prototype, t;\n      },\n          u = {}.hasOwnProperty;r = t(\"./PriorityQueue/AbstractPriorityQueue\"), o = t(\"./PriorityQueue/ArrayStrategy\"), n = t(\"./PriorityQueue/BinaryHeapStrategy\"), a = t(\"./PriorityQueue/BHeapStrategy\"), s = function (t) {\n        function e(t) {\n          t || (t = {}), t.strategy || (t.strategy = n), t.comparator || (t.comparator = function (t, e) {\n            return (t || 0) - (e || 0);\n          }), e.__super__.constructor.call(this, t);\n        }return h(e, t), e;\n      }(r), s.ArrayStrategy = o, s.BinaryHeapStrategy = n, s.BHeapStrategy = a, e.exports = s;\n    }, { \"./PriorityQueue/AbstractPriorityQueue\": 2, \"./PriorityQueue/ArrayStrategy\": 3, \"./PriorityQueue/BHeapStrategy\": 4, \"./PriorityQueue/BinaryHeapStrategy\": 5 }], 2: [function (t, e, i) {\n      var r;e.exports = r = function () {\n        function t(t) {\n          var e;if (null == (null != t ? t.strategy : void 0)) throw \"Must pass options.strategy, a strategy\";if (null == (null != t ? t.comparator : void 0)) throw \"Must pass options.comparator, a comparator\";this.priv = new t.strategy(t), this.length = (null != t && null != (e = t.initialValues) ? e.length : void 0) || 0;\n        }return t.prototype.queue = function (t) {\n          this.length++, this.priv.queue(t);\n        }, t.prototype.dequeue = function (t) {\n          if (!this.length) throw \"Empty queue\";return this.length--, this.priv.dequeue();\n        }, t.prototype.peek = function (t) {\n          if (!this.length) throw \"Empty queue\";return this.priv.peek();\n        }, t.prototype.clear = function () {\n          return this.length = 0, this.priv.clear();\n        }, t;\n      }();\n    }, {}], 3: [function (t, e, i) {\n      var r, o;o = function (t, e, i) {\n        var r, o, a;for (o = 0, r = t.length; r > o;) a = o + r >>> 1, i(t[a], e) >= 0 ? o = a + 1 : r = a;return o;\n      }, e.exports = r = function () {\n        function t(t) {\n          var e;this.options = t, this.comparator = this.options.comparator, this.data = (null != (e = this.options.initialValues) ? e.slice(0) : void 0) || [], this.data.sort(this.comparator).reverse();\n        }return t.prototype.queue = function (t) {\n          var e;e = o(this.data, t, this.comparator), this.data.splice(e, 0, t);\n        }, t.prototype.dequeue = function () {\n          return this.data.pop();\n        }, t.prototype.peek = function () {\n          return this.data[this.data.length - 1];\n        }, t.prototype.clear = function () {\n          this.data.length = 0;\n        }, t;\n      }();\n    }, {}], 4: [function (t, e, i) {\n      var r;e.exports = r = function () {\n        function t(t) {\n          var e, i, r, o, a, n, s, h, u;for (this.comparator = (null != t ? t.comparator : void 0) || function (t, e) {\n            return t - e;\n          }, this.pageSize = (null != t ? t.pageSize : void 0) || 512, this.length = 0, h = 0; 1 << h < this.pageSize;) h += 1;if (1 << h !== this.pageSize) throw \"pageSize must be a power of two\";for (this._shift = h, this._emptyMemoryPageTemplate = e = [], i = r = 0, n = this.pageSize; n >= 0 ? n > r : r > n; i = n >= 0 ? ++r : --r) e.push(null);if (this._memory = [], this._mask = this.pageSize - 1, t.initialValues) for (s = t.initialValues, o = 0, a = s.length; a > o; o++) u = s[o], this.queue(u);\n        }return t.prototype.queue = function (t) {\n          this.length += 1, this._write(this.length, t), this._bubbleUp(this.length, t);\n        }, t.prototype.dequeue = function () {\n          var t, e;return t = this._read(1), e = this._read(this.length), this.length -= 1, this.length > 0 && (this._write(1, e), this._bubbleDown(1, e)), t;\n        }, t.prototype.peek = function () {\n          return this._read(1);\n        }, t.prototype.clear = function () {\n          this.length = 0, this._memory.length = 0;\n        }, t.prototype._write = function (t, e) {\n          var i;for (i = t >> this._shift; i >= this._memory.length;) this._memory.push(this._emptyMemoryPageTemplate.slice(0));return this._memory[i][t & this._mask] = e;\n        }, t.prototype._read = function (t) {\n          return this._memory[t >> this._shift][t & this._mask];\n        }, t.prototype._bubbleUp = function (t, e) {\n          var i, r, o, a;for (i = this.comparator; t > 1 && (r = t & this._mask, t < this.pageSize || r > 3 ? o = t & ~this._mask | r >> 1 : 2 > r ? (o = t - this.pageSize >> this._shift, o += o & ~(this._mask >> 1), o |= this.pageSize >> 1) : o = t - 2, a = this._read(o), !(i(a, e) < 0));) this._write(o, e), this._write(t, a), t = o;\n        }, t.prototype._bubbleDown = function (t, e) {\n          var i, r, o, a, n;for (n = this.comparator; t < this.length;) if (t > this._mask && !(t & this._mask - 1) ? i = r = t + 2 : t & this.pageSize >> 1 ? (i = (t & ~this._mask) >> 1, i |= t & this._mask >> 1, i = i + 1 << this._shift, r = i + 1) : (i = t + (t & this._mask), r = i + 1), i !== r && r <= this.length) {\n            if (o = this._read(i), a = this._read(r), n(o, e) < 0 && n(o, a) <= 0) this._write(i, e), this._write(t, o), t = i;else {\n              if (!(n(a, e) < 0)) break;this._write(r, e), this._write(t, a), t = r;\n            }\n          } else {\n            if (!(i <= this.length)) break;if (o = this._read(i), !(n(o, e) < 0)) break;this._write(i, e), this._write(t, o), t = i;\n          }\n        }, t;\n      }();\n    }, {}], 5: [function (t, e, i) {\n      var r;e.exports = r = function () {\n        function t(t) {\n          var e;this.comparator = (null != t ? t.comparator : void 0) || function (t, e) {\n            return t - e;\n          }, this.length = 0, this.data = (null != (e = t.initialValues) ? e.slice(0) : void 0) || [], this._heapify();\n        }return t.prototype._heapify = function () {\n          var t, e, i;if (this.data.length > 0) for (t = e = 1, i = this.data.length; i >= 1 ? i > e : e > i; t = i >= 1 ? ++e : --e) this._bubbleUp(t);\n        }, t.prototype.queue = function (t) {\n          this.data.push(t), this._bubbleUp(this.data.length - 1);\n        }, t.prototype.dequeue = function () {\n          var t, e;return e = this.data[0], t = this.data.pop(), this.data.length > 0 && (this.data[0] = t, this._bubbleDown(0)), e;\n        }, t.prototype.peek = function () {\n          return this.data[0];\n        }, t.prototype.clear = function () {\n          this.length = 0, this.data.length = 0;\n        }, t.prototype._bubbleUp = function (t) {\n          for (var e, i; t > 0 && (e = t - 1 >>> 1, this.comparator(this.data[t], this.data[e]) < 0);) i = this.data[e], this.data[e] = this.data[t], this.data[t] = i, t = e;\n        }, t.prototype._bubbleDown = function (t) {\n          var e, i, r, o, a;for (e = this.data.length - 1;;) {\n            if (i = (t << 1) + 1, o = i + 1, r = t, e >= i && this.comparator(this.data[i], this.data[r]) < 0 && (r = i), e >= o && this.comparator(this.data[o], this.data[r]) < 0 && (r = o), r === t) break;a = this.data[r], this.data[r] = this.data[t], this.data[t] = a, t = r;\n          }\n        }, t;\n      }();\n    }, {}] }, {}, [1])(1);\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/priority-queue.min.js\n// module id = 1413\n// module chunks = 0","class BootScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'BootScene'\n        });\n\n        this.levels = {\n            title: { key: 'TitleScene', path: 'assets/levels/title_screen.json' },\n            town: { key: 'WorldScene', path: 'assets/levels/town.json' },\n            cave: { key: 'WorldScene', path: 'assets/levels/cave.json' },\n            battle: { key: 'BattleScene', path: 'assets/levels/battle.json' }\n        };\n    }\n\n    preload() {\n        for (let level_name in this.levels) {\n            let level = this.levels[level_name];\n            this.load.json(level_name, level.path);\n        }\n    }\n\n    create(data) {\n        let scene = '';\n        let extra_parameters = {};\n        if (!data) {\n            scene = 'title';\n        } else {\n            scene = data.scene;\n            extra_parameters = data.extra_parameters;\n        }\n        let level_data = this.cache.json.get(scene);\n        this.scene.start('LoadingScene', { level_data: level_data, scene: this.levels[scene].key, extra_parameters: extra_parameters });\n    }\n}\n\nexport default BootScene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/BootScene.js\n// module id = 1414\n// module chunks = 0","class LoadingScene extends Phaser.Scene {\n    constructor() {\n        super({\n            key: 'LoadingScene'\n        });\n    }\n\n    init(data) {\n        this.level_data = data.level_data;\n\n        let loading_message = this.add.text(320, 240, \"Loading\", { font: \"48px Kells\", fill: \"#ffffff\" });\n    }\n\n    preload() {\n        let assets = this.level_data.assets;\n        for (let asset_key in assets) {\n            let asset = assets[asset_key];\n            switch (asset.type) {\n                case \"image\":\n                    this.load.image(asset_key, asset.source);\n                    break;\n                case \"spritesheet\":\n                    this.load.spritesheet(asset_key, asset.source, { frameWidth: asset.frame_width, frameHeight: asset.frame_height, frames: asset.frames, margin: asset.margin, spacing: asset.spacing });\n                    break;\n                case \"tilemap\":\n                    this.load.tilemapTiledJSON(asset_key, asset.source);\n                    break;\n            }\n        }\n\n        for (let user_input_key in this.level_data.user_input) {\n            let user_input_path = this.level_data.user_input[user_input_key];\n            this.load.json(user_input_key, user_input_path);\n        }\n    }\n\n    create(data) {\n        this.scene.start(data.scene, { level_data: this.level_data, extra_parameters: data.extra_parameters });\n    }\n}\n\nexport default LoadingScene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/LoadingScene.js\n// module id = 1415\n// module chunks = 0","import Item from './prefabs/battle/Item';\nimport Potion from './prefabs/battle/Potion';\nimport ItemMenuItem from './prefabs/HUD/ItemMenuItem';\n\nclass Inventory {\n    constructor() {\n        this.items = [];\n\n        this.item_classes = {\n            \"potion\": Potion.prototype.constructor\n        };\n    }\n\n    collect_item(scene, item_object) {\n        if (this.items[item_object.type]) {\n            this.items[item_object.type].amount += 1;\n        } else {\n            let item = new this.item_classes[item_object.type](scene, item_object.type, { x: 0, y: 0 }, item_object.properties);\n            this.items[item_object.type] = { prefab: item, amount: 1 };\n        }\n    }\n\n    create_menu(scene, items_menu) {\n        let item_position = { x: items_menu.x, y: items_menu.y };\n        for (let item_type in this.items) {\n            let item_prefab = this.items[item_type].prefab;\n            let item_amount = this.items[item_type].amount;\n            let menu_item = new ItemMenuItem(scene, item_type + \"_menu_item\", { x: item_position.x, y: item_position.y }, { group: \"hud\", texture: item_prefab.item_texture, item_name: item_type, amount: item_amount });\n            menu_item.setOrigin(0);\n            items_menu.menu_items.push(menu_item);\n        }\n\n        items_menu.enable(false);\n    }\n\n    has_items() {\n        for (let item_type in this.items) {\n            if (this.items[item_type].amount > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    has_item(item_type) {\n        return this.items[item_type].amount > 0;\n    }\n\n    use_item(item_type, target) {\n        this.items[item_type].prefab.use(target);\n        this.items[item_type].amount -= 1;\n    }\n}\n\nexport default Inventory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Inventory.js\n// module id = 1416\n// module chunks = 0","import Item from './Item';\n\nclass Potion extends Item {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.health_power = properties.health_power;\n    }\n\n    use(target) {\n        console.log(\"using potion\");\n        target.stats.health = Math.min(100, target.stats.health + this.health_power);\n        console.log(target.name + \" healed\");\n    }\n}\n\nexport default Potion;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/Potion.js\n// module id = 1417\n// module chunks = 0","class Prefab extends Phaser.GameObjects.Text {\n    constructor(scene, name, position, properties) {\n        super(scene, position.x, position.y, properties.text, properties.style);\n\n        this.scene = scene;\n        this.name = name;\n        this.scene.add.existing(this);\n        this.scene.groups[properties.group].add(this);\n\n        if (properties.scale) {\n            this.setScale(properties.scale.x, properties.scale.y);\n        }\n\n        if (properties.anchor) {\n            this.setOrigin(properties.anchor.x, properties.anchor.y);\n        }\n\n        this.scene.prefabs[name] = this;\n    }\n}\n\nexport default Prefab;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/TextPrefab.js\n// module id = 148\n// module chunks = 0","import UserInput from '../plugins/UserInput';\n\nclass JSONLevelScene extends Phaser.Scene {\n    constructor(key) {\n        super({\n            key: key\n        });\n    }\n\n    init(data) {\n        this.level_data = data.level_data;\n    }\n\n    create() {\n        this.groups = {};\n        this.level_data.groups.forEach(function (group_name) {\n            this.groups[group_name] = this.add.group();\n        }, this);\n\n        this.prefabs = {};\n        for (var prefab_name in this.level_data.prefabs) {\n            var prefab_data = this.level_data.prefabs[prefab_name];\n            this.create_prefab(prefab_name, prefab_data);\n        }\n\n        if (this.level_data.user_input) {\n            this.user_inputs = {};\n            for (let user_input_key in this.level_data.user_input) {\n                this.user_inputs[user_input_key] = this.cache.json.get(user_input_key);\n            }\n\n            this.user_input = new UserInput(this);\n            this.user_input_data = this.cache.json.get(this.level_data.initial_user_input);\n            this.user_input.set_input(this.user_input_data);\n        }\n    }\n\n    create_prefab(prefab_name, prefab_data) {\n        if (this.prefab_classes.hasOwnProperty(prefab_data.type)) {\n            var prefab = new this.prefab_classes[prefab_data.type](this, prefab_name, prefab_data.position, prefab_data.properties);\n        }\n        return prefab;\n    }\n}\n\nexport default JSONLevelScene;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scenes/JSONLevelScene.js\n// module id = 191\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass Unit extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        if (!this.scene.anims.anims.has(name + '_idle')) {\n            this.scene.anims.create({\n                key: name + '_idle',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: properties.animations.idle.frames }),\n                frameRate: properties.animations.idle.fps,\n                repeat: -1\n            });\n        }\n\n        if (!this.scene.anims.anims.has(name + '_attack1')) {\n            this.scene.anims.create({\n                key: name + '_attack1',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: properties.animations.attack1.frames }),\n                frameRate: properties.animations.idle.fps\n            });\n        }\n\n        if (!this.scene.anims.anims.has(name + '_attack2')) {\n            this.scene.anims.create({\n                key: name + '_attack2',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: properties.animations.attack2.frames }),\n                frameRate: properties.animations.idle.fps\n            });\n        }\n\n        if (!this.scene.anims.anims.has(name + '_hit')) {\n            this.scene.anims.create({\n                key: name + '_hit',\n                frames: this.scene.anims.generateFrameNumbers(this.texture.key, { frames: properties.animations.hit.frames }),\n                frameRate: properties.animations.idle.fps\n            });\n        }\n\n        this.on('animationcomplete', this.back_to_idle.bind(this));\n\n        this.anims.play(name + '_idle');\n\n        this.stats = properties.stats;\n    }\n\n    back_to_idle(animation) {\n        this.anims.play(this.name + '_idle');\n        if (animation.key == this.name + '_attack1' || animation.key == this.name + '_attack2') {\n            this.scene.next_turn();\n        }\n    }\n\n    receive_damage(damage) {\n        let damage_text = this.scene.add.text(this.x, this.y - 50, \"\" + damage, { font: \"bold 24px Kells\", fill: \"#FF0000\" }, this.scene.groups.hud);\n        this.timed_event = this.scene.time.addEvent({ delay: 1000, callback: damage_text.destroy, callbackScope: damage_text });\n\n        this.stats.health -= damage;\n        this.anims.play(this.name + \"_hit\");\n        if (this.stats.health <= 0) {\n            this.stats.health = 0;\n            this.destroy();\n        }\n    }\n\n    calculate_act_turn(current_turn) {\n        this.act_turn = current_turn + Math.ceil(100 / this.stats.speed);\n    }\n}\n\nexport default Unit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/Unit.js\n// module id = 295\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass PhysicalAttack extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.owner = properties.owner;\n    }\n\n    hit(target) {\n        let attack_multiplier = this.scene.rnd.realInRange(0.8, 1.2);\n        let defense_multiplier = this.scene.rnd.realInRange(0.8, 1.2);\n\n        let damage = Math.max(0, Math.round(attack_multiplier * this.owner.stats.attack - defense_multiplier * target.stats.defense));\n\n        target.receive_damage(damage);\n\n        this.owner.anims.play(this.owner.name + \"_attack1\");\n    }\n\n}\n\nexport default PhysicalAttack;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/PhysicalAttack.js\n// module id = 554\n// module chunks = 0","import Prefab from '../Prefab';\nimport MenuItem from './MenuItem';\n\nclass ItemMenuItem extends MenuItem {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.item_name = properties.item_name;\n    }\n\n    select() {\n        if (this.scene.cache.game.inventory.has_item(this.item_name)) {\n            this.scene.prefabs.items_menu.enable(false);\n\n            this.scene.cache.game.inventory.use_item(this.item_name, this.scene.current_unit);\n\n            if (!this.scene.cache.game.inventory.has_item(this.item_name)) {\n                let scene = this.scene;\n                this.destroy();\n                scene.next_turn();\n            } else {\n                this.scene.next_turn();\n            }\n        }\n    }\n}\n\nexport default ItemMenuItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/HUD/ItemMenuItem.js\n// module id = 555\n// module chunks = 0","import Prefab from '../Prefab';\n\nclass Item extends Prefab {\n    constructor(scene, name, position, properties) {\n        super(scene, name, position, properties);\n\n        this.item_texture = properties.item_texture;\n    }\n\n    use() {\n        console.log('using item');\n    }\n}\n\nexport default Item;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/prefabs/battle/Item.js\n// module id = 556\n// module chunks = 0","import 'phaser';\nimport TitleScene from './scenes/TitleScene';\nimport WorldScene from './scenes/WorldScene';\nimport BattleScene from './scenes/BattleScene';\nimport BootScene from './scenes/BootScene';\nimport LoadingScene from './scenes/LoadingScene';\nimport JSONLevelScene from './scenes/JSONLevelScene';\nimport Inventory from './Inventory';\n\nlet bootScene = new BootScene();\nlet loadingScene = new LoadingScene();\nlet titleScene = new TitleScene();\nlet worldScene = new WorldScene();\nlet battleScene = new BattleScene();\n\nlet config = {\n    type: Phaser.AUTO,\n    width: 640,\n    height: 480,\n    scaleMode: Phaser.ScaleModes.DEFAULT,\n    physics: {\n        default: 'arcade',\n        arcade: {\n            gravity: { y: 0 }\n        }\n    }\n};\n\nlet game = new Phaser.Game(config);\n\ngame.inventory = new Inventory();\n\ngame.scene.add('BootScene', bootScene);\ngame.scene.add('LoadingScene', loadingScene);\ngame.scene.add('TitleScene', titleScene);\ngame.scene.add('WorldScene', worldScene);\ngame.scene.add('BattleScene', battleScene);\ngame.scene.start(\"BootScene\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 760\n// module chunks = 0"],"mappings":";;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpnGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}